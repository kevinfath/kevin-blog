<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kevin-blog</title>
  
  <subtitle>Look at the man in front of you and see why he&#39;s ahead and learn his way of doing it</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.kevinfaith.cn/"/>
  <updated>2018-03-24T13:51:59.281Z</updated>
  <id>http://www.kevinfaith.cn/</id>
  
  <author>
    <name>kevin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>介绍一款牛逼的渗透测试框架</title>
    <link href="http://www.kevinfaith.cn/2018/03/24/%E4%BB%8B%E7%BB%8D%E4%B8%80%E6%AC%BE%E7%89%9B%E9%80%BC%E7%9A%84%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>http://www.kevinfaith.cn/2018/03/24/介绍一款牛逼的社会工程学字典生成器/</id>
    <published>2018-03-24T12:39:13.000Z</published>
    <updated>2018-03-24T13:51:59.281Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（<a href="https://github.com/alpha1e0/pentestdb.git）" target="_blank" rel="noopener">https://github.com/alpha1e0/pentestdb.git）</a><br><a id="more"></a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>PentestDB支持windows/linux/macos，需安装python 2.6.x 或 2.7.x运行。</p><pre><code>git clone https://github.com/alpha1e0/pentestdb.git</code></pre><h6 id="安装依赖："><a href="#安装依赖：" class="headerlink" title="安装依赖："></a>安装依赖：</h6><p>项目中的脚本文件依赖于lxml，linux系统一般默认安装lxml，如果没有可通过以下方式安装：</p><pre><code>pip install lxmlapt-get install lxmlyum install lxml</code></pre><p>windows用户：<br>我对windows不怎么了解，具体就自行百度了。</p><h6 id="解决nmap依赖"><a href="#解决nmap依赖" class="headerlink" title="解决nmap依赖"></a>解决nmap依赖</h6><p>项目中的C段扫描依赖于nmap扫描器，到<code>https://nmap.org/download.html</code>下载nmap，在windows下需要设置环境变量，让系统能够找到nmap.exe。还是那句话，在windows下怎么添加环境变量，我就不班门弄斧了，自行百度吧。linux是不需要的。</p><h5 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h5><h6 id="1-Exploit系统"><a href="#1-Exploit系统" class="headerlink" title="1.Exploit系统"></a>1.Exploit系统</h6><p><code>pen.py</code>的exploit子命令提供了exploit模块相关操作，exploit模块是一个轻量级的exploit框架，可以编写各种web漏洞的exploit：</p><ul><li>搜索exploit信息</li><li>增加、删除、修改exploit信息</li><li>执行某个exploit</li><li>搜索并批量执行exploit<br>exploit保存在项目根目录下的exploit目录下<br>例如：</li></ul><pre><code>#列举、搜索、注册、更新、删除pen.py exploit -lpen.py exploit -q appName:joomlapen.py exploit --register exploitpen.py exploit --update cms_joomla_3_4_session_object_injection.pypen.py exploit -d &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot;pen.py exploit --detail &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot; #执行exploitpen.py exploit -e cms_joomla_3_4_session_object_injection.py -u http://127.0.0.1:1234 --attackpen.py exploit -s appName:joomla -u http://127.0.0.1:1234 --verifypen.py exploit -s appName:joomla -u @url.txt</code></pre><h6 id="2-服务端应用识别"><a href="#2-服务端应用识别" class="headerlink" title="2.服务端应用识别"></a>2.服务端应用识别</h6><p><code>pen.py</code>的service子命令提供了服务端应用识别的功能，能够识别服务器信息，包括：</p><pre><code>操作系统 web服务器 web中间件 CMS等</code></pre><p>例如：</p><pre><code>pen.py service http://xxx.com# 开启CMS识别加强模式pen.py service http://xxx.com --cms</code></pre><h6 id="3-社工密码字典生成"><a href="#3-社工密码字典生成" class="headerlink" title="3.社工密码字典生成"></a>3.社工密码字典生成</h6><p><code>pen.py</code>的password子命令提供了根据社工信息生成密码字典的功能，能够设置不同关键字生成密码字典</p><p>该模块可通过以下要素组合生成密码：</p><ul><li>全名，–fullname，名字中各个字中间加空格，例如”lin zhi ling”</li><li>昵称，–nickname</li><li>英文名称，–englishname</li><li>伴侣名字，–partnername</li><li>生日，–birthday</li><li>手机号，–phone</li><li>QQ号，–qq</li><li>公司名称，–company</li><li>域名，–domian</li><li>老密码，–oldpasswd</li><li>关键字，–keyword</li><li>关键数字，–keynumbers</li></ul><p>例如：</p><pre><code>pen.py password --fullname &quot;lin zhi ling&quot; --birthday 1980-1-1 --phone 12344445555 --qq 34233888 -o password.txt</code></pre><h6 id="4-URI敏感文件爆破"><a href="#4-URI敏感文件爆破" class="headerlink" title="4.URI敏感文件爆破"></a>4.URI敏感文件爆破</h6><p><code>pen.py</code>的uribrute子命令提供了URI敏感文件爆破，URI爆破字典生成的功能</p><p>例如：</p><pre><code># 生成web打包备份、敏感文件字典，后缀名使用jsp和jspx，自定义关键字xxx，指定输出结果dict.txtpen.py uribrute -t webbak,interestfile -e jspx,jsp --keyword &quot;xxx&quot; -o dict.txt# 爆破目标站点，使用safeurl bypass wafpen.py uribrute -b -u http://127.0.0.1/discuz/6.0/ --safeurl &quot;http://127.0.0.1/discuz/6.0/&quot;#  爆破url.txt中的所有站点，爆破敏感文件，自定义notfound页面关键字为“找不到页面”pen.py uribrute -b -u @urls.txt -t interestfile --notfound &quot;找不到页面&quot;</code></pre><h6 id="5-Google-Hacking功能"><a href="#5-Google-Hacking功能" class="headerlink" title="5.Google Hacking功能"></a>5.Google Hacking功能</h6><p><code>pen.py</code>的search子命令提供了Google Hacking的功能，目前支持以下搜索引擎：</p><ul><li>bing</li><li>google</li><li>baidu</li></ul><p>例如：</p><pre><code>pen.py search &quot;inurl:viewthread.php&quot; -s 10 -o tmp.txt# --unique设定域名唯一，相同域名只记录一个搜索结果:pen.py search &quot;inurl:viewthread.php&quot; -s 10 --unique -o tmp.txt</code></pre><p>注意，由于百度关闭了 localsearch 功能，因此目前 baidu 方式目前暂不可用。</p><h6 id="6-子域名爆破"><a href="#6-子域名爆破" class="headerlink" title="6.子域名爆破"></a>6.子域名爆破</h6><p><code>pen.py</code>的domain子命令提供了子域名爆破功能：</p><ul><li>域传送漏洞检测、利用</li><li>DNS字典爆破</li><li>Google Hacking搜索</li></ul><p>注：支持输出到html文件，使用<em>-o xxx.html</em>做为输出文件即可<br>例如：</p><pre><code># 使用域传送技术、Google Hacking对aaa.com 进行子域名爆破pen.py domamin aaa.com -t zg# 使用字典爆破子域名，自定义字典文件domain_large.txt，同时指定爆破顶级域名pen.py domain aaa.com -t d --dict domain_large.txt --topdomian</code></pre><h6 id="7-C段扫描"><a href="#7-C段扫描" class="headerlink" title="7.C段扫描"></a>7.C段扫描</h6><p><code>pen.py</code>的subnet子命令提供了C段扫描功能。</p><p>注：支持输出到html文件，使用<em>-o xxx.html</em>做为输出文件即可</p><p>例如：</p><pre><code>pen.py subnet test.com -o result.html</code></pre><h6 id="8-编码"><a href="#8-编码" class="headerlink" title="8.编码"></a>8.编码</h6><p><code>pen.py</code>的encode子命令提供了编码的功能</p><p>编码方式<em>-t/–type</em>支持：</p><blockquote><p>url url-all hex decimal unicode unicode-all md5 sha base64 base32 html html-all php-chr utf7 utf7-all<br>其中**-all编码会编码所有字符包括非特殊字符</p></blockquote><p>非ASCII编码<em>-m/–method</em>支持：</p><blockquote><p>utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式</p></blockquote><p>例如：</p><pre><code>pen.py encode -t unicode &quot;aaa=你好&quot;pen.py encode -t url-all -m gbk &quot;id=你好&quot;pen.py encode -t md5 &quot;aaaaaaaa&quot;</code></pre><h6 id="9-解码"><a href="#9-解码" class="headerlink" title="9.解码"></a>9.解码</h6><p><code>pen.py</code>的decode子命令提供了解码的功能，并提供非ASCII编码编码推测功能</p><p>解码方式<em>-t/–type</em>支持：</p><blockquote><p>auto(默认) hex url unicode decimal base64 base32 html php-chr utf7<br>其中auto方式会自动检测url类型、hex类型的字符串并进行解码</p></blockquote><p>非ASCII编码<em>-m/–method</em>支持：</p><blockquote><p>utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式</p></blockquote><p>例如：</p><pre><code>pen.py decode -t base64 5ZOI5ZOIpen.py decode -m utf8 aaa%E5%93%88%E5%93%88pen.py encode -t hex &quot;\x61\x61\xe5\x93\x88\xe5\x93\x88&quot;# 推测编码pen.py decode -d &quot;\x61\x61\xe5\x93\x88\xe5\x93\x88&quot;</code></pre><p>我就列举了一些常用的功能，还有很多非常不错的功能，如“ Mail账户验证/爆破”、“文件处理功能”，“字典维护”等等。<br>我就不一一列举了，感兴趣的可以去项目地址自行查看“<a href="https://github.com/alpha1e0/pentestdb.git”。" target="_blank" rel="noopener">https://github.com/alpha1e0/pentestdb.git”。</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（&lt;a href=&quot;https://github.com/alpha1e0/pentestdb.git）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/alpha1e0/pentestdb.git）&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://www.kevinfaith.cn/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="kali" scheme="http://www.kevinfaith.cn/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>linux给终端、git设置代理</title>
    <link href="http://www.kevinfaith.cn/2018/03/15/linux%E7%BB%99%E7%BB%88%E7%AB%AF%E3%80%81git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>http://www.kevinfaith.cn/2018/03/15/linux给终端、git设置代理/</id>
    <published>2018-03-15T12:43:20.000Z</published>
    <updated>2018-03-15T13:16:28.632Z</updated>
    
    <content type="html"><![CDATA[<h5 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h5><p>因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？<br><a id="more"></a></p><h5 id="准备工具："><a href="#准备工具：" class="headerlink" title="准备工具："></a>准备工具：</h5><p>Shadowsocks-qt5 polipo 一台搭建有ss服务的海外服务器</p><h5 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h5><h6 id="安装ss-qt5："><a href="#安装ss-qt5：" class="headerlink" title="安装ss-qt5："></a>安装ss-qt5：</h6><pre><code>$ sudo add-apt-repository ppa:hzwhuang/ss-qt5 $ sudo apt-get update$ sudo apt-get install shadowsocks-qt5</code></pre><p>安装完成，打开软件<img src="http://ww1.sinaimg.cn/large/0060lm7Tly1fpdqm9h3fbj30de0ebwf6.jpg" alt=""><br>点击连接-&gt;添加-&gt;手动，输入服务器地址，端口，本地映射地址，本地端口，加密协议,保存，连接，就ojbk了。（怎么搭建Shadowsocks的教程请自行搜索，因为各种原因我就不一一陈诉了）这是我的配置截图：<img src="http://ww2.sinaimg.cn/large/0060lm7Tly1fpdqktbykaj30940emmy2.jpg" alt=""> </p><h6 id="安装polipo"><a href="#安装polipo" class="headerlink" title="安装polipo:"></a>安装polipo:</h6><p>命令很简单</p><pre><code>$ sudo apt-get install polipo</code></pre><h6 id="修改配置文件："><a href="#修改配置文件：" class="headerlink" title="修改配置文件："></a>修改配置文件：</h6><pre><code>$ vi etc/polipo/config</code></pre><p>原文件中已经有了两句话，那么需要新加入3句话：</p><pre><code>socksParentProxy = &quot;127.0.0.1:1080&quot;  //这里对应着上面配置文件的本地地址和本地端口socksProxyType = socks5   //这里对应上面的本地服务器类型logLevel=4</code></pre><p>:wq 保存退出</p><h6 id="关闭和启动polip"><a href="#关闭和启动polip" class="headerlink" title="关闭和启动polip:"></a>关闭和启动polip:</h6><pre><code>$ sudo service polipo stop$ sudo service polipo start</code></pre><h5 id="验证和使用："><a href="#验证和使用：" class="headerlink" title="验证和使用："></a>验证和使用：</h5><pre><code>$ curl ip.gs //查询你的IP地址和地理信息$ http_proxy=http://localhost:8123 curl ip.gs //使用代理以后的ip地址和地理信息，如果发现ip和地理信息已经改变了，表示成功</code></pre><p>以后终端使用代理前面都要加上http_proxy=<a href="http://localhost:8123" target="_blank" rel="noopener">http://localhost:8123</a> 是不是很麻烦。别着急</p><h5 id="设置别名"><a href="#设置别名" class="headerlink" title="设置别名"></a>设置别名</h5><p>每一次都输入这么一串命令实在太不人性化，解决方法就是给这个命令一个缩写的别名，比如“hp”。</p><pre><code>vi ～/.bashrc</code></pre><p>因为我用的是zsh,所以我的命令是<code>vi ~/.zshrc</code><br>在文档最后面加上</p><pre><code>alias hp=&quot;http_proxy=http://localhost:8123&quot; </code></pre><p>:wq 保存退出<br>执行<code>$ source ~/.zshrc</code><br>这样就不需要输入一长串代码了，需要用到代理的时候前面加个hp就好，<br>实验一下</p><pre><code>$ hp curl ip.gsCurrent IP / 当前 IP: 45.77.253.103ISP / 运营商:  choopa.comCity / 城市:  SingaporeCountry / 国家: Singapore</code></pre><h5 id="给git设置代理："><a href="#给git设置代理：" class="headerlink" title="给git设置代理："></a>给git设置代理：</h5><p>上面的配置对git是没有用的，需要另行配置<br>在终端下执行：</p><pre><code>$ git config --global http.proxy http://127.0.0.1:8123</code></pre><p>但是这种方法在关机以后就不起效果了，需要重新输入一遍，<br>如果嫌麻烦，可以修改</p><pre><code>$ vi ~/.gitconfig</code></pre><p>在[http]一行下面加入<code>proxy = http://127.0.0.1:8123</code>就可以一直奇效了</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=544566796&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;概述：&quot;&gt;&lt;a href=&quot;#概述：&quot; class=&quot;headerlink&quot; title=&quot;概述：&quot;&gt;&lt;/a&gt;概述：&lt;/h5&gt;&lt;p&gt;因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
      <category term="代理" scheme="http://www.kevinfaith.cn/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="Shadowsocks" scheme="http://www.kevinfaith.cn/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下安装node版本管理工具NVM</title>
    <link href="http://www.kevinfaith.cn/2018/03/04/ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7NVM/"/>
    <id>http://www.kevinfaith.cn/2018/03/04/ubuntu下安装node版本管理工具NVM/</id>
    <published>2018-03-04T06:50:41.000Z</published>
    <updated>2018-03-15T12:57:45.555Z</updated>
    
    <content type="html"><![CDATA[<h5 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h5><p>nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。<br><a id="more"></a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><hr><blockquote><p>curl -o- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh</a> | bash<br>如果没有curl可以 <code>sudo apt install curl</code>一下<br>等进度条结束就安装好啦～^_^</p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>终端输入<code>nvm</code>你就可以看到nvm的帮助信息了</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><blockquote><p>nvm ls-remote      //列出全部可以安装的版本号<br>nvm install v7.7.0    //安装指定版本<br>nvm use v7.8.0        //切换nodejs的版本，效果是全局的哦<br>nvm current           //查看当前使用的版本<br>nvm ls                //查看系统当前使用版本</p></blockquote><hr><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;概述：&quot;&gt;&lt;a href=&quot;#概述：&quot; class=&quot;headerlink&quot; title=&quot;概述：&quot;&gt;&lt;/a&gt;概述：&lt;/h5&gt;&lt;p&gt;nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
      <category term="nvm" scheme="http://www.kevinfaith.cn/tags/nvm/"/>
    
      <category term="nodejs" scheme="http://www.kevinfaith.cn/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>acm C语言鸡兔同笼问题</title>
    <link href="http://www.kevinfaith.cn/2017/03/03/acm/"/>
    <id>http://www.kevinfaith.cn/2017/03/03/acm/</id>
    <published>2017-03-02T16:00:00.000Z</published>
    <updated>2018-03-04T08:07:28.082Z</updated>
    
    <content type="html"><![CDATA[<p>描述</p><blockquote><p>浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。<br>童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。<br>随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。<br>现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。</p></blockquote><a id="more"></a><p>输入</p><blockquote><p>输入包括多组数据。<br>每行包括2个数据：n、m(代表上面题目中提到的意思1≤n, m≤230)。<br>n、m都是整数。 </p></blockquote><p>输出</p><blockquote><p>每组数据的输出都只有一行，分别是鸽子的数量和兔子数量。<br>如果输入的测试数据不能求得结果，那肯定是redraiment这个马大哈数错了，就输出”Error”提示他。</p></blockquote><p>样例输入</p><blockquote><p>94 35<br>13</p></blockquote><p>样例输出</p><blockquote><p>12 23<br>error</p></blockquote><p>上代码</p><pre><code>#include &lt;stdio.h&gt;int main(){    int m,n,x,y;     scanf(&quot;%d,%d&quot;,&amp;m,&amp;n);    if (n&gt;=1,m&lt;=2^30 )    {        if ( m % 2 == 0 )        {            x=2*n-m/2;            y=m/2-n;            printf(&quot;%d,%d\n&quot;,x,y);        }        else        {            printf(&quot;error\n&quot;);        }    }    else    {        printf(&quot;error\n&quot;);    }    return 0;}</code></pre><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5276807&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;描述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。&lt;br&gt;童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。&lt;br&gt;随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。&lt;br&gt;现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="acm编程" scheme="http://www.kevinfaith.cn/categories/acm%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="acm" scheme="http://www.kevinfaith.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>acm C语言求两个数最大值</title>
    <link href="http://www.kevinfaith.cn/2017/02/17/acm2/"/>
    <id>http://www.kevinfaith.cn/2017/02/17/acm2/</id>
    <published>2017-02-16T16:00:00.000Z</published>
    <updated>2018-03-04T08:07:05.014Z</updated>
    
    <content type="html"><![CDATA[<p>C语言实验题――两个数比较<br><a id="more"></a><br>描述</p><blockquote><p>求2个数中较大者。</p></blockquote><p>输入</p><blockquote><p>第一行为测试的数据组数N，接下来的N行分别是两个待比较的整数</p></blockquote><p>输出</p><blockquote><p>输出N行，每一行的值为每组数中较大的整数</p></blockquote><p>样例输入</p><blockquote><p>2<br>1   2<br>15  10</p></blockquote><p>样例输出</p><blockquote><p>2<br>15</p></blockquote><blockquote><p>#include &lt;stdio.h&gt;<br>int a,b;<br>int main(int argc, char const *argv[])<br>{<br>    scanf(“%d,%d”,&amp;a,&amp;b);<br>    if (a&gt;b)<br>    {<br>        printf(“%d\n”, a);<br>    }<br>    else<br>    {<br>        printf(“%d\n”, b );<br>    }<br>    return 0;<br>}</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言实验题――两个数比较&lt;br&gt;
    
    </summary>
    
      <category term="acm编程" scheme="http://www.kevinfaith.cn/categories/acm%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="acm" scheme="http://www.kevinfaith.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>linux下实现计划任务的方法</title>
    <link href="http://www.kevinfaith.cn/2017/02/16/linux2/"/>
    <id>http://www.kevinfaith.cn/2017/02/16/linux2/</id>
    <published>2017-02-15T16:00:00.000Z</published>
    <updated>2018-03-04T08:12:36.387Z</updated>
    
    <content type="html"><![CDATA[<p>linux下实行计划任务的方法</p><ol><li>执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world：<blockquote><p>at 10.00 tomorrow<br>at &gt;etho“hello world”</p></blockquote></li></ol><a id="more"></a><p>ctrl+D结束输入</p><blockquote><p>job 1 at 2017-2-16 10:00</p></blockquote><p>这样就ok了</p><p>2.如果要设置周期性任务，可以用crontab命令来完成，“crontab -e”编辑cron表，“crontab -l”查看当前cron表，“crontab -r“删除当前cron表，”crontab -u 用户名”以某用户的身份控制cron表。</p><p>crontab -e 编辑cron表，这时会打开vi，按“i”进入编辑模式，<br>依此输入 “分钟  小时 日 月 周 [用户名]  命令”<br>如：我想在2017.2.16，4点输出i love you</p><blockquote><p>*  4  16  2  *  etho“i love you”</p></blockquote><p>cron时间符号</p><blockquote><p>*  代表任意时间<br>，代表分隔出不连续点，如2.5.7<br>-  代表连续点。如2-4， 表示2.3.4<br>  */  表示每隔单位时间</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux下实行计划任务的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world：&lt;blockquote&gt;
&lt;p&gt;at 10.00 tomorrow&lt;br&gt;at &amp;gt;etho“hello world”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="linux命令" scheme="http://www.kevinfaith.cn/categories/linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux下修改文件所属用户组和文件权限的方法</title>
    <link href="http://www.kevinfaith.cn/2017/02/15/linux/"/>
    <id>http://www.kevinfaith.cn/2017/02/15/linux/</id>
    <published>2017-02-14T16:00:00.000Z</published>
    <updated>2018-03-04T08:08:37.927Z</updated>
    
    <content type="html"><![CDATA[<p>linux下修改文件所属用户组和修改文件权限的方法</p><ol><li>修改文件所属用户组的命令是chown，这个命令的格式是</li></ol><blockquote><p>chown    [-R]    username  filename<br>chown    [-R]    username:group filename</p></blockquote><a id="more"></a><p>第一个是修改文件所属的的用户，第二个修改文件所属用户组,-R属性为可选属性，意思是递归修改，也就是把文件下所有文件，包括子目录一起修改，大多数情况下-R 属性都是这个意思。</p><p>2.修改文件权限的命令是chmod，这个命令的格式是有两种设置方法有数字法与文字法i，数字法</p><p>就是用数字来代替rwx，r、w、x分别对应4、2、1，这个命令的格式为</p><blockquote><p>chmod  [-R]  xyz  filename</p></blockquote><p>其中x代表owner权限，y代表group权限，z代表others权限，以上三种身份的值就是rwx的和，r代表读，w写 ，x运行，如果没有相应的权限则值为0。<br>如想设置.bashrc文件的权限为owner为rwx，group权限为无，others权限为无，则命令如下</p><blockquote><p>chmod 700 .bashrc</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux下修改文件所属用户组和修改文件权限的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改文件所属用户组的命令是chown，这个命令的格式是&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;chown    [-R]    username  filename&lt;br&gt;chown    [-R]    username:group filename&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux命令" scheme="http://www.kevinfaith.cn/categories/linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
  </entry>
  
</feed>
