<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kevin-blog</title>
  
  <subtitle>Look at the man in front of you and see why he&#39;s ahead and learn his way of doing it</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.kevinfaith.cn/"/>
  <updated>2018-04-25T12:02:16.121Z</updated>
  <id>http://www.kevinfaith.cn/</id>
  
  <author>
    <name>kevin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu实现定时弹窗</title>
    <link href="http://www.kevinfaith.cn//posts/a4c0e361/"/>
    <id>http://www.kevinfaith.cn//posts/a4c0e361/</id>
    <published>2018-04-25T10:02:48.000Z</published>
    <updated>2018-04-25T12:02:16.121Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>最近在头条上看到，长期久坐８小时以上会影响生育能力，突然有点慌，作为一个IT工作者，８小时．．．．然后我这人没有喝水的习惯，经常专注电脑，就想着，有没有什么办法可以定时提醒你喝水，休息的。<br><a id="more"></a></p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>因为我用的是ubuntu，用到提醒功能就让我想起了notify-send命令。<br>notify-send是一个可以让你发送桌面通知的命令. 它的语法非常简单:</p><pre><code>notify-send [其他选项...] 标题 [内容]</code></pre><p>提醒解决了，那怎么实现定时功能呢。<br>通过我的查阅，我找到了crontab这个命令</p><pre><code>在LINUX中，周期执行的任务一般由cron这个守护进程来处理[ps -ef|grep cron]。cron读取一个或多个配置文件，这些配置文件中包含了命令行及其调用时间。cron的配置文件称为“crontab”，是“cron table”的简写。</code></pre><h5 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h5><pre><code>vi time.cron  //创建一个cron脚本</code></pre><h6 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h6><pre><code>0 */1.5 * * * export DISPLAY=:0.0; notify-send [&quot;该休息一下啦&quot;] &quot;喝水！伸懒腰！&gt;动一动！&quot;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;最近在头条上看到，长期久坐８小时以上会影响生育能力，突然有点慌，作为一个IT工作者，８小时．．．．然后我这人没有喝水的习惯，经常专注电脑，就想着，有没有什么办法可以定时提醒你喝水，休息的。&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://www.kevinfaith.cn/tags/shell/"/>
    
      <category term="crontab" scheme="http://www.kevinfaith.cn/tags/crontab/"/>
    
      <category term="notify-send" scheme="http://www.kevinfaith.cn/tags/notify-send/"/>
    
  </entry>
  
  <entry>
    <title>致我深爱的人</title>
    <link href="http://www.kevinfaith.cn//posts/cf2eaaff/"/>
    <id>http://www.kevinfaith.cn//posts/cf2eaaff/</id>
    <published>2018-04-24T14:18:35.000Z</published>
    <updated>2018-04-25T13:43:39.620Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>人生总是充斥着各种无奈与不舍，在爱情的世界里，最美好的莫过于遇到一个心爱的人，最无奈的莫过于爱而不得。<br><a id="more"></a><br>如果有一天，你的爱情不能如愿以偿，不要伤心，不要哭泣，做好自己，时间会用另一种方式补偿给你的。</p><p>相爱是偶然的<br>错过是必然的</p><p>在爱情的世界里，最美好的莫过于遇到一个心爱的人，最无奈的莫过于爱而不得。</p><p>有些人，也许比较幸运，在对的时间里，刚好遇见对的人，于是，就这样相爱了。</p><p>有些人，或许就比较不幸，在错的时间的里，恰巧遇见对的人，于是，只能伤感、失眠。</p><p>能够相爱，当然是最好的，郎情妾意，你侬我侬，想想都是一种幸福。</p><p>你爱着我，我爱着你，有人分享快乐，有人分担烦恼，难过的时候有人安慰，开心的时候有人喝彩。</p><p>不能相爱，固然徒增遗憾，痴心无处安放，思念又断不了，想想都是一种心酸。</p><p>我爱着你，却有缘无份，无论这份爱多么的高贵，无论这份爱多么的真挚，都与你无关。</p><p>爱情，总有一些爱，垂手可得；总有一些情，遥不可及。</p><p>其实，爱更多时候，都是充满无奈的；在得不到的时候，都会认为自己可以爱成理想中的样子，后来才发现，理想很远，要么是自己累了，要么是所爱的倦了。</p><p>最后，想说的永远说不出口，想见却再也没有合适的身份或理由，结果连想念都成了一种打扰。</p><p>但不能相爱，至少美好一直都在，因为最初的最美。只是时候未到，很多人不能理解，等时间到了，看开了，看淡了，你就会明白，有些爱，不一定要拥有；有些情，不一定要得到。</p><p>相爱也好，不能相爱也罢，只要生命中，有出现过这个人就行了</p><p>其实爱上你我从未后悔，但我最遗憾的，是你的遗憾和我有关，但庆幸的是我终于熬过了那段看谁都像你，干什么都会想起你的，所以的一切都是关于你的日子，我终于可以不问归期～不在联系。但有些东西，会淡，但　不会忘</p><pre><code>————致我曾经深爱的那个人</code></pre><iframe frameborder="yes" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=490163629&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人生总是充斥着各种无奈与不舍，在爱情的世界里，最美好的莫过于遇到一个心爱的人，最无奈的莫过于爱而不得。&lt;br&gt;
    
    </summary>
    
    
      <category term="矫情" scheme="http://www.kevinfaith.cn/tags/%E7%9F%AB%E6%83%85/"/>
    
      <category term="情感" scheme="http://www.kevinfaith.cn/tags/%E6%83%85%E6%84%9F/"/>
    
      <category term="爱情" scheme="http://www.kevinfaith.cn/tags/%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>区块链</title>
    <link href="http://www.kevinfaith.cn//posts/89374c81/"/>
    <id>http://www.kevinfaith.cn//posts/89374c81/</id>
    <published>2018-04-21T03:44:39.000Z</published>
    <updated>2018-04-21T06:22:03.020Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h5><p>最近小米出了一个“区块链产品”：wifi链，现在还是内侧版，我也下了个玩玩，比特币的时候没有做第一批吃螃蟹的，现在面前就有个机会，当然要体验一把。这篇博客会说下什么是区块链。<br><a id="more"></a></p><h5 id="什么是区块链："><a href="#什么是区块链：" class="headerlink" title="什么是区块链："></a>什么是区块链：</h5><p>按照wiki是这么描述的：<br>区块链（Blockchain）是分布式数据库识别、传播和记载信息的智能话对等网络，也称为价值互联网，中本聪在2008年，于《比特币白皮书》中提出了“区块链”概念，本在2009年创立了比特币社会网络，开发了第一个区块，即“创世区块”。</p><p>简单的来说，区块链的本质就是一种特殊的分布式数据库，既然是数据库，当然是用来储存信息的，其次既然是分布式的，所以任何人都可以假设服务器，加入区块链网络，成为其中的一个节点，既然是去中心化，所以没有任何的管理員，每一个节点都是平等的。</p><h5 id="1-理解："><a href="#1-理解：" class="headerlink" title="1.理解："></a>1.理解：</h5><p>简单的理解来说就是区块链具有：1.数据的安全性和交易的可追述性，区块链技术能使得交易数据完全公开透明，并可以提供完整的信息流。2.区块链的数据具有无法篡改的特性.</p><h6 id="2-起源"><a href="#2-起源" class="headerlink" title="2.起源"></a>2.起源</h6><p>区块链起源于比特币，是比特币网络参与者们集体维护的一个总账本。但创新者们已经开始用区块链技术开发远超比特币自身的众多应用。从这个意义讲，我们又可以认为比特币是区块链技术的第一个应用。</p><h6 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h6><p>区块链由一个个区块（block）组成。区块很像数据库的记录，每次写入数据，就是创建一个区块。<br>每一个区块包含了一个区块头，一个区块尾。</p><pre><code>区块头（Head）：记录当前区块的特征值区块体（Body）：实际数据</code></pre><p>区块头里包含了：生成时间，实际数据（即区块体）的哈希，上一个区块的哈希，每一个区块的哈希都是不同的，简单来说就是区块头里是各种信息的加密哈希。而且哈希近乎不会被破解，<br>而且区块与哈希是一一对应的，每个区块的哈希都是针对”区块头”（Head）计算的。也就是说，把区块头的各项特征值，按照顺序连接在一起，组成一个很长的字符串，再对这个字符串计算哈希。而且区块里面的任何内容只要变了，（包括上一个区块的内容）哈希都会被改的面目全非。这就是区块的唯一性，因为没有人知道上一个区块的内容，而且区块的数据一旦写入，就无法篡改。前面说过每一个区块都连着上一个区块，所以这就是区块链名字的由来。<br>可以这样简单的理解区块，就是每一次的交易的信息。</p><h5 id="矿工的任务："><a href="#矿工的任务：" class="headerlink" title="矿工的任务："></a>矿工的任务：</h5><p>矿工要做的就是计算每一个区块头的哈希，前面说过，每一个区块头都包含了上一个区块的哈希，把区块头的各项特征值，按照顺序连接在一起，组成一个很长的字符串，再对这个字符串计算哈希，这就是矿工的任务了，可能有人会问矿工是怎么得到上一个区块的内容的呢，这是因为中本聪规定，任何的交易都会把区块内容分发到所有的矿工手里，然后矿工进行计算，读到这里，你可能会有一个疑问，人们都说采矿很难，可是采矿不就是用计算机算出一个哈希吗，这正是计算机的强项啊，怎么会变得很难，迟迟算不出来呢？那你就大错特错了，中本聪有个变态的规定：原来不是任意一个哈希都可以，只有满足条件的哈希才会被区块链接受。这个条件特别苛刻，使得绝大部分哈希都不满足要求，必须重算。</p><p>前面说过当前区块的哈希由区块头唯一决定。如果要对同一个区块反复计算哈希，就意味着，区块头必须不停地变化，否则不可能算出不一样的哈希。区块头里面所有的特征值都是固定的，为了让区块头产生变化，中本聪故意增加了一个随机项，叫做 Nonce。其实这个不如叫做幸运数，只有你足够幸运，在一次次失败中，反复修改幸运值，重复这个过程直到生成一串有效的编号。这就是采矿如此之慢的根本原因，运气好的话，也许一会就找到了 Nonce。运气不好的话，可能算完了21.47亿次，都没有发现 Nonce，即当前区块体不可能算出满足条件的哈希。这时，协议允许矿工改变区块体，开始新的计算。这就奇怪了，这些矿工为什么要拼命干这看似无意义的事情呢？其实矿工是有报酬的，只要你生成一张满足条件的区块，你就会获得比特币的报酬。</p><h5 id="难度系数的动态调节："><a href="#难度系数的动态调节：" class="headerlink" title="难度系数的动态调节："></a>难度系数的动态调节：</h5><p>正如上一节所说，采矿具有随机性，没法保证正好十分钟产出一个区块，有时一分钟就算出来了，有时几个小时可能也没结果。总体来看，随着硬件设备的提升，以及矿机的数量增长，计算速度一定会越来越快。</p><p>为了将产出速率恒定在十分钟，中本聪还设计了难度系数的动态调节机制。他规定，难度系数每两周（2016个区块）调整一次。如果这两周里面，区块的平均生成速度是9分钟，就意味着比法定速度快了10%，因此接下来的难度系数就要调高10%；如果平均生成速度是11分钟，就意味着比法定速度慢了10%，因此接下来的难度系数就要调低10%。<br>难度系数越调越高，导致了采矿越来越难。</p><h5 id="确认区块有效性"><a href="#确认区块有效性" class="headerlink" title="确认区块有效性"></a>确认区块有效性</h5><p>当某挖矿小组幸运的生成了一张有意义的账簿，为了得到奖励，必须立刻请其它小组确认自己的工作。前面说过，当前村里有7个挖矿组，所以这个小组必须将有效的区块信息发到所以的挖矿小组手中，确认区块有效性，这个确认非常简单，因为区块头中包含了上一块的哈希，只要这个区块中有上一块的区块，和区块信息，就确认成功。负责不予确认。</p><h5 id="区块链的分叉"><a href="#区块链的分叉" class="headerlink" title="区块链的分叉"></a>区块链的分叉</h5><p>即使区块链是可靠的，现在还有一个问题没有解决：如果两个人同时向区块链写入数据，也就是说，同时有两个区块加入，因为它们都连着前一个区块，就形成了分叉。这时应该采纳哪一个区块呢？<br>现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。由于新区块的生成速度由计算能力决定，所以这条规则就是说，拥有大多数计算能力的那条分支，就是正宗的区块链。<br>这一章的内容比较繁琐，涉及到哈希，区块等等知识，有兴趣的可以去<a href="http://www.ruanyifeng.com/blog/2017/12/blockchain-tutorial.html" target="_blank" rel="noopener">阮一峰老师的博客</a>看一下，<br>还有一个叫做<a href="http://blog.jobbole.com/53433/" target="_blank" rel="noopener">伯乐在线</a>的，我的这篇文章也是参考他们的博客写的。</p><h5 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h5><p>如果有写的不对的地方可以联系我修改</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介：&quot;&gt;&lt;a href=&quot;#简介：&quot; class=&quot;headerlink&quot; title=&quot;简介：&quot;&gt;&lt;/a&gt;简介：&lt;/h5&gt;&lt;p&gt;最近小米出了一个“区块链产品”：wifi链，现在还是内侧版，我也下了个玩玩，比特币的时候没有做第一批吃螃蟹的，现在面前就有个机会，当然要体验一把。这篇博客会说下什么是区块链。&lt;br&gt;
    
    </summary>
    
    
      <category term="区块链" scheme="http://www.kevinfaith.cn/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="以太坊" scheme="http://www.kevinfaith.cn/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>学会如何让你在网络上变的相对匿名</title>
    <link href="http://www.kevinfaith.cn//posts/11406/"/>
    <id>http://www.kevinfaith.cn//posts/11406/</id>
    <published>2018-04-10T08:42:02.000Z</published>
    <updated>2018-04-21T05:02:48.874Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>   因为最近在弄渗透测试，就担心那天被查水表了，就想起怎么让自己的变的相对匿名呢，这时我想到了tor，“Tor（The Onion Router）是第二代洋葱路由（onion routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。Tor专门防范流量过滤、嗅探分析。”<br><a id="more"></a><br>    形象的说：你想把一封信交给一个人（化名小明），你走到大街上，随便叫一个人A，让他把这封信交给小明，A走在路上把这封信交给了B，让他交给小明，B又把这封信交给了C，然后C才把信交给了小明，这中间经过很多次的转接，就很难找寻到这封信的寄件人，这差不多就是tor的实现方式了。（这只是tor的实现方式，他的原理我就不一一叙述了，感兴趣的可以google，百度，如果你真的喜欢他，也可以为tor做点贡献，在自己的服务器上搭建一个tor的节点）<br>    但是这有个问题，tor好像只有在浏览器上的，能不能把他应用到别处呢，比如在全局代理，比如linux的Terminal（终端）,因为渗透测试很多时候需要在终端下进行。</p><h4 id="方法实现"><a href="#方法实现" class="headerlink" title="方法实现"></a>方法实现</h4><p>   通过一通折腾，我发现了<a href="http://www.theonionrouter.com" target="_blank" rel="noopener">tor官网</a>提供了与系统相对于的一款工具<code>Expert Bundle</code>，他只包含了tor工具，不含浏览器，tor虽然默认提供了一些公开的桥，您可以轻松启用这些功能，不幸的是，由于这些桥梁是公开分发的，因此审查员很容易阻止其中的一些桥梁，因此其中一些桥梁可能无法工作，需要自己搭建shadowsocks,用自己服务器做桥，实现shadowsocks+Tor的匿名上网，因为shadowsocks只支持socks5的流量，所以还需要用到privoxy。</p><h5 id="安装tor："><a href="#安装tor：" class="headerlink" title="安装tor："></a>安装tor：</h5><p>  在linux下，因为我用的是ubuntu，打开终端输入：</p><pre><code>sudo apt install tor</code></pre><p>  windows因为我不熟悉，安装有兴趣的请去官方文档查看。<br>安装完毕！<br>  因为shadowsocks只支持socks5的流量，<br>所以<br>配置 <code>vi etc/tor/torrc</code><br>在最下面插入</p><pre><code>SOCKS5proxy 127.0.0.1:1080    //通过socks5的代理ReachableAddresses *:80,*:443   //允许80,443端口ReachableAddresses reject *:*</code></pre><p>:wq保存，重启tor服务，<code>service tor restart</code></p><h5 id="安装shadowsocks："><a href="#安装shadowsocks：" class="headerlink" title="安装shadowsocks："></a>安装shadowsocks：</h5><p>   因为一些特殊原因，搭建方法我不能说，需要匿名自行百度，关键词（shadowsocks搭建教程），Shadowsocks（中文名称：影梭）是使用Python、C++、C#以及Go等语言开发、基于Apache许可证的开放源代码软件，用于保护网络流量、加密数据传输以及突破中国网络审查。</p><h5 id="安装privoxy："><a href="#安装privoxy：" class="headerlink" title="安装privoxy："></a>安装privoxy：</h5><p>  还是那句话因为很多应用是不支持socks5的，（比如Terminal终端）所以这里就需要用到privoxy了，privoxy有将socks代理转为http代理的功能。<br>  好～话不多说，安装：</p><pre><code>sudo apt install privoxy</code></pre><p>安装完毕后，配置安装文件</p><p>  因为tor监听的端口是9050，所以我们把127.0.0.1:9050的socks5的流量转换<br>成html、htmls的</p><pre><code>sudo vi /etc/privoxy/config</code></pre><p>在里面插入一行</p><pre><code>forward-socks5t   /   127.0.0.1:9050 .listen-address 0.0.0.0:8118</code></pre><p>后面的“.”不要忘了。<br>启动一下privoxy服务。</p><pre><code>sudo service privoxy restart</code></pre><p>这样就可以给终端设置tor匿名了。</p><pre><code>vi ~/.zshc</code></pre><p>在里面添加一句</p><pre><code>alias hp=&quot;http_proxy=127.0.0.1:8118&quot;</code></pre><p>这样只要你在需要用到匿名的时候，在命令前加一句hp，就可以实现流量相对匿名了。</p><h4 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h4><pre><code>hp curl ip.sb</code></pre><p>就会显示你当前代理以后的源ip，如果显示ip是国外的，表示你成功了。</p><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>因为最近失恋了，心情很郁闷，哎，blog写的效率有点低，各位多担待。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;   因为最近在弄渗透测试，就担心那天被查水表了，就想起怎么让自己的变的相对匿名呢，这时我想到了tor，“Tor（The Onion Router）是第二代洋葱路由（onion routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。Tor专门防范流量过滤、嗅探分析。”&lt;br&gt;
    
    </summary>
    
    
      <category term="网络" scheme="http://www.kevinfaith.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="梯子" scheme="http://www.kevinfaith.cn/tags/%E6%A2%AF%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>beef漏洞利用框架安装.md</title>
    <link href="http://www.kevinfaith.cn//posts/26725/"/>
    <id>http://www.kevinfaith.cn//posts/26725/</id>
    <published>2018-04-07T14:08:20.000Z</published>
    <updated>2018-04-20T04:52:45.236Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>BeEF是目前欧美最流行的web框架攻击平台，它的全称是 the Browser exploitation framework project.最近两年国外各种黑客的会议都有它的介绍，很多pentester对这个工具都有很高的赞美。BeEF是我见过的最好的xss利用框架，他同时能够配合metasploit进一步渗透主机，强大的有些吓人！！<br><a id="more"></a></p><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><h6 id="１．先安装一些必要的工具："><a href="#１．先安装一些必要的工具：" class="headerlink" title="１．先安装一些必要的工具："></a>１．先安装一些必要的工具：</h6><pre><code>sudo apt-get install curl git nodejs</code></pre><h6 id="２．因为beef是ruby编写的，所以首先安装ruby管理工具："><a href="#２．因为beef是ruby编写的，所以首先安装ruby管理工具：" class="headerlink" title="２．因为beef是ruby编写的，所以首先安装ruby管理工具："></a>２．因为beef是ruby编写的，所以首先安装ruby管理工具：</h6><pre><code>curl -sSL https://get.rvm.io | bash -s stablesource /etc/profile.d/rvm.shrvm install 2.3.0   //安装ruby2.3.0版本rvm use 2.3.0 --default  //选择系统默认版本为2.3.0</code></pre><h6 id="３．安装beff"><a href="#３．安装beff" class="headerlink" title="３．安装beff:"></a>３．安装beff:</h6><pre><code>git clone git://github.com/beefproject/beef.gitcd beef</code></pre><h6 id="4-安装bundle"><a href="#4-安装bundle" class="headerlink" title="4.安装bundle:"></a>4.安装bundle:</h6><pre><code>gem install bundlebundle install</code></pre><h6 id="5-更新beEF"><a href="#5-更新beEF" class="headerlink" title="5.更新beEF:"></a>5.更新beEF:</h6><pre><code>./update-beef</code></pre><h6 id="6-启动beEF"><a href="#6-启动beEF" class="headerlink" title="6.启动beEF:"></a>6.启动beEF:</h6><pre><code>./beef</code></pre><h6 id="7-启动浏览器："><a href="#7-启动浏览器：" class="headerlink" title="7.启动浏览器："></a>7.启动浏览器：</h6><pre><code>http://127.0.0.1:3000/ui/panel　//进入beef后台管理页面使用默认用户名 beef 密码 beef登录</code></pre><h6 id="8-使用："><a href="#8-使用：" class="headerlink" title="8.使用："></a>8.使用：</h6><p>BeEF自带了一个hack页面</p><pre><code>http://127.0.0.1:3000/demos/basic.html </code></pre><p> 当有人点击这个页面，就可以控制他的浏览器，钓鱼，社工，随你发挥。</p><h5 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h5><p>运行curl -sSL <a href="https://get.rvm.io" target="_blank" rel="noopener">https://get.rvm.io</a> | bash -s stable 时会报公钥问题。<br>根据提示的公钥，再运行<br>gpg –keyserver hkp://keys.gnupg.net –recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3<br>成功运行后，再一次curl -sSL <a href="https://get.rvm.io" target="_blank" rel="noopener">https://get.rvm.io</a> | bash -s stable 来安装环境。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;BeEF是目前欧美最流行的web框架攻击平台，它的全称是 the Browser exploitation framework project.最近两年国外各种黑客的会议都有它的介绍，很多pentester对这个工具都有很高的赞美。BeEF是我见过的最好的xss利用框架，他同时能够配合metasploit进一步渗透主机，强大的有些吓人！！&lt;br&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="http://www.kevinfaith.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="http://www.kevinfaith.cn/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="XSS" scheme="http://www.kevinfaith.cn/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>介绍一款牛逼的渗透测试框架</title>
    <link href="http://www.kevinfaith.cn//posts/3818/"/>
    <id>http://www.kevinfaith.cn//posts/3818/</id>
    <published>2018-03-24T12:39:13.000Z</published>
    <updated>2018-04-20T04:52:45.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（<a href="https://github.com/alpha1e0/pentestdb.git）" target="_blank" rel="noopener">https://github.com/alpha1e0/pentestdb.git）</a><br><a id="more"></a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>PentestDB支持windows/linux/macos，需安装python 2.6.x 或 2.7.x运行。</p><pre><code>git clone https://github.com/alpha1e0/pentestdb.git</code></pre><h6 id="安装依赖："><a href="#安装依赖：" class="headerlink" title="安装依赖："></a>安装依赖：</h6><p>项目中的脚本文件依赖于lxml，linux系统一般默认安装lxml，如果没有可通过以下方式安装：</p><pre><code>pip install lxmlapt-get install lxmlyum install lxml</code></pre><p>windows用户：<br>我对windows不怎么了解，具体就自行百度了。</p><h6 id="解决nmap依赖"><a href="#解决nmap依赖" class="headerlink" title="解决nmap依赖"></a>解决nmap依赖</h6><p>项目中的C段扫描依赖于nmap扫描器，到<code>https://nmap.org/download.html</code>下载nmap，在windows下需要设置环境变量，让系统能够找到nmap.exe。还是那句话，在windows下怎么添加环境变量，我就不班门弄斧了，自行百度吧。linux是不需要的。</p><h5 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h5><h6 id="1-Exploit系统"><a href="#1-Exploit系统" class="headerlink" title="1.Exploit系统"></a>1.Exploit系统</h6><p><code>pen.py</code>的exploit子命令提供了exploit模块相关操作，exploit模块是一个轻量级的exploit框架，可以编写各种web漏洞的exploit：</p><ul><li>搜索exploit信息</li><li>增加、删除、修改exploit信息</li><li>执行某个exploit</li><li>搜索并批量执行exploit<br>exploit保存在项目根目录下的exploit目录下<br>例如：</li></ul><pre><code>#列举、搜索、注册、更新、删除pen.py exploit -lpen.py exploit -q appName:joomlapen.py exploit --register exploitpen.py exploit --update cms_joomla_3_4_session_object_injection.pypen.py exploit -d &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot;pen.py exploit --detail &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot; #执行exploitpen.py exploit -e cms_joomla_3_4_session_object_injection.py -u http://127.0.0.1:1234 --attackpen.py exploit -s appName:joomla -u http://127.0.0.1:1234 --verifypen.py exploit -s appName:joomla -u @url.txt</code></pre><h6 id="2-服务端应用识别"><a href="#2-服务端应用识别" class="headerlink" title="2.服务端应用识别"></a>2.服务端应用识别</h6><p><code>pen.py</code>的service子命令提供了服务端应用识别的功能，能够识别服务器信息，包括：</p><pre><code>操作系统 web服务器 web中间件 CMS等</code></pre><p>例如：</p><pre><code>pen.py service http://xxx.com# 开启CMS识别加强模式pen.py service http://xxx.com --cms</code></pre><h6 id="3-社工密码字典生成"><a href="#3-社工密码字典生成" class="headerlink" title="3.社工密码字典生成"></a>3.社工密码字典生成</h6><p><code>pen.py</code>的password子命令提供了根据社工信息生成密码字典的功能，能够设置不同关键字生成密码字典</p><p>该模块可通过以下要素组合生成密码：</p><ul><li>全名，–fullname，名字中各个字中间加空格，例如”lin zhi ling”</li><li>昵称，–nickname</li><li>英文名称，–englishname</li><li>伴侣名字，–partnername</li><li>生日，–birthday</li><li>手机号，–phone</li><li>QQ号，–qq</li><li>公司名称，–company</li><li>域名，–domian</li><li>老密码，–oldpasswd</li><li>关键字，–keyword</li><li>关键数字，–keynumbers</li></ul><p>例如：</p><pre><code>pen.py password --fullname &quot;lin zhi ling&quot; --birthday 1980-1-1 --phone 12344445555 --qq 34233888 -o password.txt</code></pre><h6 id="4-URI敏感文件爆破"><a href="#4-URI敏感文件爆破" class="headerlink" title="4.URI敏感文件爆破"></a>4.URI敏感文件爆破</h6><p><code>pen.py</code>的uribrute子命令提供了URI敏感文件爆破，URI爆破字典生成的功能</p><p>例如：</p><pre><code># 生成web打包备份、敏感文件字典，后缀名使用jsp和jspx，自定义关键字xxx，指定输出结果dict.txtpen.py uribrute -t webbak,interestfile -e jspx,jsp --keyword &quot;xxx&quot; -o dict.txt# 爆破目标站点，使用safeurl bypass wafpen.py uribrute -b -u http://127.0.0.1/discuz/6.0/ --safeurl &quot;http://127.0.0.1/discuz/6.0/&quot;#  爆破url.txt中的所有站点，爆破敏感文件，自定义notfound页面关键字为“找不到页面”pen.py uribrute -b -u @urls.txt -t interestfile --notfound &quot;找不到页面&quot;</code></pre><h6 id="5-Google-Hacking功能"><a href="#5-Google-Hacking功能" class="headerlink" title="5.Google Hacking功能"></a>5.Google Hacking功能</h6><p><code>pen.py</code>的search子命令提供了Google Hacking的功能，目前支持以下搜索引擎：</p><ul><li>bing</li><li>google</li><li>baidu</li></ul><p>例如：</p><pre><code>pen.py search &quot;inurl:viewthread.php&quot; -s 10 -o tmp.txt# --unique设定域名唯一，相同域名只记录一个搜索结果:pen.py search &quot;inurl:viewthread.php&quot; -s 10 --unique -o tmp.txt</code></pre><p>注意，由于百度关闭了 localsearch 功能，因此目前 baidu 方式目前暂不可用。</p><h6 id="6-子域名爆破"><a href="#6-子域名爆破" class="headerlink" title="6.子域名爆破"></a>6.子域名爆破</h6><p><code>pen.py</code>的domain子命令提供了子域名爆破功能：</p><ul><li>域传送漏洞检测、利用</li><li>DNS字典爆破</li><li>Google Hacking搜索</li></ul><p>注：支持输出到html文件，使用<em>-o xxx.html</em>做为输出文件即可<br>例如：</p><pre><code># 使用域传送技术、Google Hacking对aaa.com 进行子域名爆破pen.py domamin aaa.com -t zg# 使用字典爆破子域名，自定义字典文件domain_large.txt，同时指定爆破顶级域名pen.py domain aaa.com -t d --dict domain_large.txt --topdomian</code></pre><h6 id="7-C段扫描"><a href="#7-C段扫描" class="headerlink" title="7.C段扫描"></a>7.C段扫描</h6><p><code>pen.py</code>的subnet子命令提供了C段扫描功能。</p><p>注：支持输出到html文件，使用<em>-o xxx.html</em>做为输出文件即可</p><p>例如：</p><pre><code>pen.py subnet test.com -o result.html</code></pre><h6 id="8-编码"><a href="#8-编码" class="headerlink" title="8.编码"></a>8.编码</h6><p><code>pen.py</code>的encode子命令提供了编码的功能</p><p>编码方式<em>-t/–type</em>支持：</p><blockquote><p>url url-all hex decimal unicode unicode-all md5 sha base64 base32 html html-all php-chr utf7 utf7-all<br>其中**-all编码会编码所有字符包括非特殊字符</p></blockquote><p>非ASCII编码<em>-m/–method</em>支持：</p><blockquote><p>utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式</p></blockquote><p>例如：</p><pre><code>pen.py encode -t unicode &quot;aaa=你好&quot;pen.py encode -t url-all -m gbk &quot;id=你好&quot;pen.py encode -t md5 &quot;aaaaaaaa&quot;</code></pre><h6 id="9-解码"><a href="#9-解码" class="headerlink" title="9.解码"></a>9.解码</h6><p><code>pen.py</code>的decode子命令提供了解码的功能，并提供非ASCII编码编码推测功能</p><p>解码方式<em>-t/–type</em>支持：</p><blockquote><p>auto(默认) hex url unicode decimal base64 base32 html php-chr utf7<br>其中auto方式会自动检测url类型、hex类型的字符串并进行解码</p></blockquote><p>非ASCII编码<em>-m/–method</em>支持：</p><blockquote><p>utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式</p></blockquote><p>例如：</p><pre><code>pen.py decode -t base64 5ZOI5ZOIpen.py decode -m utf8 aaa%E5%93%88%E5%93%88pen.py encode -t hex &quot;\x61\x61\xe5\x93\x88\xe5\x93\x88&quot;# 推测编码pen.py decode -d &quot;\x61\x61\xe5\x93\x88\xe5\x93\x88&quot;</code></pre><p>我就列举了一些常用的功能，还有很多非常不错的功能，如“ Mail账户验证/爆破”、“文件处理功能”，“字典维护”等等。<br>我就不一一列举了，感兴趣的可以去项目地址自行查看“<a href="https://github.com/alpha1e0/pentestdb.git”。" target="_blank" rel="noopener">https://github.com/alpha1e0/pentestdb.git”。</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（&lt;a href=&quot;https://github.com/alpha1e0/pentestdb.git）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/alpha1e0/pentestdb.git）&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://www.kevinfaith.cn/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="kali" scheme="http://www.kevinfaith.cn/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>linux给终端、git设置代理</title>
    <link href="http://www.kevinfaith.cn//posts/38299/"/>
    <id>http://www.kevinfaith.cn//posts/38299/</id>
    <published>2018-03-15T12:43:20.000Z</published>
    <updated>2018-04-20T04:52:45.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h5><p>因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？<br><a id="more"></a></p><h5 id="准备工具："><a href="#准备工具：" class="headerlink" title="准备工具："></a>准备工具：</h5><p>Shadowsocks-qt5 polipo 一台搭建有ss服务的海外服务器</p><h5 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h5><h6 id="安装ss-qt5："><a href="#安装ss-qt5：" class="headerlink" title="安装ss-qt5："></a>安装ss-qt5：</h6><pre><code>$ sudo add-apt-repository ppa:hzwhuang/ss-qt5 $ sudo apt-get update$ sudo apt-get install shadowsocks-qt5</code></pre><p>安装完成，打开软件<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ww1.sinaimg.cn/large/0060lm7Tly1fpdqm9h3fbj30de0ebwf6.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>点击连接-&gt;添加-&gt;手动，输入服务器地址，端口，本地映射地址，本地端口，加密协议,保存，连接，就ojbk了。（怎么搭建Shadowsocks的教程请自行搜索，因为各种原因我就不一一陈诉了）这是我的配置截图：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ww2.sinaimg.cn/large/0060lm7Tly1fpdqktbykaj30940emmy2.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure> </p><h6 id="安装polipo"><a href="#安装polipo" class="headerlink" title="安装polipo:"></a>安装polipo:</h6><p>命令很简单</p><pre><code>$ sudo apt-get install polipo</code></pre><h6 id="修改配置文件："><a href="#修改配置文件：" class="headerlink" title="修改配置文件："></a>修改配置文件：</h6><pre><code>$ vi etc/polipo/config</code></pre><p>原文件中已经有了两句话，那么需要新加入3句话：</p><pre><code>socksParentProxy = &quot;127.0.0.1:1080&quot;  //这里对应着上面配置文件的本地地址和本地端口socksProxyType = socks5   //这里对应上面的本地服务器类型logLevel=4</code></pre><p>:wq 保存退出</p><h6 id="关闭和启动polip"><a href="#关闭和启动polip" class="headerlink" title="关闭和启动polip:"></a>关闭和启动polip:</h6><pre><code>$ sudo service polipo stop$ sudo service polipo start</code></pre><h5 id="验证和使用："><a href="#验证和使用：" class="headerlink" title="验证和使用："></a>验证和使用：</h5><pre><code>$ curl ip.gs //查询你的IP地址和地理信息$ http_proxy=http://localhost:8123 curl ip.gs //使用代理以后的ip地址和地理信息，如果发现ip和地理信息已经改变了，表示成功</code></pre><p>以后终端使用代理前面都要加上http_proxy=<a href="http://localhost:8123" target="_blank" rel="noopener">http://localhost:8123</a> 是不是很麻烦。别着急</p><h5 id="设置别名"><a href="#设置别名" class="headerlink" title="设置别名"></a>设置别名</h5><p>每一次都输入这么一串命令实在太不人性化，解决方法就是给这个命令一个缩写的别名，比如“hp”。</p><pre><code>vi ～/.bashrc</code></pre><p>因为我用的是zsh,所以我的命令是<code>vi ~/.zshrc</code><br>在文档最后面加上</p><pre><code>alias hp=&quot;http_proxy=http://localhost:8123&quot; </code></pre><p>:wq 保存退出<br>执行<code>$ source ~/.zshrc</code><br>这样就不需要输入一长串代码了，需要用到代理的时候前面加个hp就好，<br>实验一下</p><pre><code>$ hp curl ip.gsCurrent IP / 当前 IP: 45.77.253.103ISP / 运营商:  choopa.comCity / 城市:  SingaporeCountry / 国家: Singapore</code></pre><h5 id="给git设置代理："><a href="#给git设置代理：" class="headerlink" title="给git设置代理："></a>给git设置代理：</h5><p>上面的配置对git是没有用的，需要另行配置<br>在终端下执行：</p><pre><code>$ git config --global http.proxy http://127.0.0.1:8123</code></pre><p>但是这种方法在关机以后就不起效果了，需要重新输入一遍，<br>如果嫌麻烦，可以修改</p><pre><code>$ vi ~/.gitconfig</code></pre><p>在[http]一行下面加入<code>proxy = http://127.0.0.1:8123</code>就可以一直奇效了</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=544566796&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;概述：&quot;&gt;&lt;a href=&quot;#概述：&quot; class=&quot;headerlink&quot; title=&quot;概述：&quot;&gt;&lt;/a&gt;概述：&lt;/h5&gt;&lt;p&gt;因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
      <category term="代理" scheme="http://www.kevinfaith.cn/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="Shadowsocks" scheme="http://www.kevinfaith.cn/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下安装node版本管理工具NVM</title>
    <link href="http://www.kevinfaith.cn//posts/24809/"/>
    <id>http://www.kevinfaith.cn//posts/24809/</id>
    <published>2018-03-04T06:50:41.000Z</published>
    <updated>2018-04-20T04:52:45.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h5><p>nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。<br><a id="more"></a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><hr><blockquote><p>curl -o- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh</a> | bash<br>如果没有curl可以 <code>sudo apt install curl</code>一下<br>等进度条结束就安装好啦～^_^</p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>终端输入<code>nvm</code>你就可以看到nvm的帮助信息了</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><blockquote><p>nvm ls-remote      //列出全部可以安装的版本号<br>nvm install v7.7.0    //安装指定版本<br>nvm use v7.8.0        //切换nodejs的版本，效果是全局的哦<br>nvm current           //查看当前使用的版本<br>nvm ls                //查看系统当前使用版本</p></blockquote><hr><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;概述：&quot;&gt;&lt;a href=&quot;#概述：&quot; class=&quot;headerlink&quot; title=&quot;概述：&quot;&gt;&lt;/a&gt;概述：&lt;/h5&gt;&lt;p&gt;nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
      <category term="nvm" scheme="http://www.kevinfaith.cn/tags/nvm/"/>
    
      <category term="nodejs" scheme="http://www.kevinfaith.cn/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>acm C语言鸡兔同笼问题</title>
    <link href="http://www.kevinfaith.cn//posts/15133/"/>
    <id>http://www.kevinfaith.cn//posts/15133/</id>
    <published>2017-03-02T16:00:00.000Z</published>
    <updated>2018-04-20T04:52:45.236Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>描述</p><blockquote><p>浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。<br>童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。<br>随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。<br>现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。</p></blockquote><a id="more"></a><p>输入</p><blockquote><p>输入包括多组数据。<br>每行包括2个数据：n、m(代表上面题目中提到的意思1≤n, m≤230)。<br>n、m都是整数。 </p></blockquote><p>输出</p><blockquote><p>每组数据的输出都只有一行，分别是鸽子的数量和兔子数量。<br>如果输入的测试数据不能求得结果，那肯定是redraiment这个马大哈数错了，就输出”Error”提示他。</p></blockquote><p>样例输入</p><blockquote><p>94 35<br>13</p></blockquote><p>样例输出</p><blockquote><p>12 23<br>error</p></blockquote><p>上代码</p><pre><code>#include &lt;stdio.h&gt;int main(){    int m,n,x,y;     scanf(&quot;%d,%d&quot;,&amp;m,&amp;n);    if (n&gt;=1,m&lt;=2^30 )    {        if ( m % 2 == 0 )        {            x=2*n-m/2;            y=m/2-n;            printf(&quot;%d,%d\n&quot;,x,y);        }        else        {            printf(&quot;error\n&quot;);        }    }    else    {        printf(&quot;error\n&quot;);    }    return 0;}</code></pre><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5276807&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;描述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。&lt;br&gt;童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。&lt;br&gt;随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。&lt;br&gt;现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="acm编程" scheme="http://www.kevinfaith.cn/categories/acm%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="acm" scheme="http://www.kevinfaith.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>acm C语言求两个数最大值</title>
    <link href="http://www.kevinfaith.cn//posts/22498/"/>
    <id>http://www.kevinfaith.cn//posts/22498/</id>
    <published>2017-02-16T16:00:00.000Z</published>
    <updated>2018-04-20T04:52:45.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>C语言实验题――两个数比较<br><a id="more"></a><br>描述</p><blockquote><p>求2个数中较大者。</p></blockquote><p>输入</p><blockquote><p>第一行为测试的数据组数N，接下来的N行分别是两个待比较的整数</p></blockquote><p>输出</p><blockquote><p>输出N行，每一行的值为每组数中较大的整数</p></blockquote><p>样例输入</p><blockquote><p>2<br>1   2<br>15  10</p></blockquote><p>样例输出</p><blockquote><p>2<br>15</p></blockquote><blockquote><p>#include &lt;stdio.h&gt;<br>int a,b;<br>int main(int argc, char const *argv[])<br>{<br>    scanf(“%d,%d”,&amp;a,&amp;b);<br>    if (a&gt;b)<br>    {<br>        printf(“%d\n”, a);<br>    }<br>    else<br>    {<br>        printf(“%d\n”, b );<br>    }<br>    return 0;<br>}</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言实验题――两个数比较&lt;br&gt;
    
    </summary>
    
      <category term="acm编程" scheme="http://www.kevinfaith.cn/categories/acm%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="acm" scheme="http://www.kevinfaith.cn/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>linux下实现计划任务的方法</title>
    <link href="http://www.kevinfaith.cn//posts/15245/"/>
    <id>http://www.kevinfaith.cn//posts/15245/</id>
    <published>2017-02-15T16:00:00.000Z</published>
    <updated>2018-04-20T04:52:45.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>linux下实行计划任务的方法</p><ol><li>执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world：<blockquote><p>at 10.00 tomorrow<br>at &gt;etho“hello world”</p></blockquote></li></ol><a id="more"></a><p>ctrl+D结束输入</p><blockquote><p>job 1 at 2017-2-16 10:00</p></blockquote><p>这样就ok了</p><p>2.如果要设置周期性任务，可以用crontab命令来完成，“crontab -e”编辑cron表，“crontab -l”查看当前cron表，“crontab -r“删除当前cron表，”crontab -u 用户名”以某用户的身份控制cron表。</p><p>crontab -e 编辑cron表，这时会打开vi，按“i”进入编辑模式，<br>依此输入 “分钟  小时 日 月 周 [用户名]  命令”<br>如：我想在2017.2.16，4点输出i love you</p><blockquote><p>*  4  16  2  *  etho“i love you”</p></blockquote><p>cron时间符号</p><blockquote><p>*  代表任意时间<br>，代表分隔出不连续点，如2.5.7<br>-  代表连续点。如2-4， 表示2.3.4<br>  */  表示每隔单位时间</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux下实行计划任务的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world：&lt;blockquote&gt;
&lt;p&gt;at 10.00 tomorrow&lt;br&gt;at &amp;gt;etho“hello world”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="linux命令" scheme="http://www.kevinfaith.cn/categories/linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux下修改文件所属用户组和文件权限的方法</title>
    <link href="http://www.kevinfaith.cn//posts/51489/"/>
    <id>http://www.kevinfaith.cn//posts/51489/</id>
    <published>2017-02-14T16:00:00.000Z</published>
    <updated>2018-04-20T04:52:45.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>linux下修改文件所属用户组和修改文件权限的方法</p><ol><li>修改文件所属用户组的命令是chown，这个命令的格式是</li></ol><blockquote><p>chown    [-R]    username  filename<br>chown    [-R]    username:group filename</p></blockquote><a id="more"></a><p>第一个是修改文件所属的的用户，第二个修改文件所属用户组,-R属性为可选属性，意思是递归修改，也就是把文件下所有文件，包括子目录一起修改，大多数情况下-R 属性都是这个意思。</p><p>2.修改文件权限的命令是chmod，这个命令的格式是有两种设置方法有数字法与文字法i，数字法</p><p>就是用数字来代替rwx，r、w、x分别对应4、2、1，这个命令的格式为</p><blockquote><p>chmod  [-R]  xyz  filename</p></blockquote><p>其中x代表owner权限，y代表group权限，z代表others权限，以上三种身份的值就是rwx的和，r代表读，w写 ，x运行，如果没有相应的权限则值为0。<br>如想设置.bashrc文件的权限为owner为rwx，group权限为无，others权限为无，则命令如下</p><blockquote><p>chmod 700 .bashrc</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux下修改文件所属用户组和修改文件权限的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改文件所属用户组的命令是chown，这个命令的格式是&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;chown    [-R]    username  filename&lt;br&gt;chown    [-R]    username:group filename&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux命令" scheme="http://www.kevinfaith.cn/categories/linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="linux" scheme="http://www.kevinfaith.cn/tags/linux/"/>
    
  </entry>
  
</feed>
