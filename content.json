{"meta":{"title":"kevin-blog","subtitle":"Look at the man in front of you and see why he's ahead and learn his way of doing it","description":"blog","author":"kevin","url":"http://www.kevinfaith.cn"},"pages":[{"title":"","date":"2018-03-07T08:13:59.421Z","updated":"2018-03-07T08:12:58.500Z","comments":true,"path":"google85fc9525e2b1ce1e.html","permalink":"http://www.kevinfaith.cn/google85fc9525e2b1ce1e.html","excerpt":"","text":"google-site-verification: google85fc9525e2b1ce1e.html"},{"title":"","date":"2018-03-06T09:32:55.343Z","updated":"2018-03-06T09:32:55.343Z","comments":true,"path":"about/index.html","permalink":"http://www.kevinfaith.cn/about/index.html","excerpt":"","text":"关于我对服务端、前端、数据分析等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于学习正在往终身学习者前进…近期学习方向：Python 关于座右铭 As long as we work hard, everything is possible. (要努力，一切皆有可能) 关于爱好热爱运动，尤其喜爱阅读、旅行。 联系我 Blog: www.kevinfaith.cn Email: 549817286@qq.com GitHub: kevinfaith telegram:@bboxkevin"},{"title":"","date":"2018-03-06T09:24:33.146Z","updated":"2018-03-06T09:24:33.094Z","comments":true,"path":"bitcoin/index.html","permalink":"http://www.kevinfaith.cn/bitcoin/index.html","excerpt":"","text":"Loading…"},{"title":"tags","date":"2018-02-25T08:40:50.393Z","updated":"2018-02-25T08:40:50.341Z","comments":true,"path":"tags/index.html","permalink":"http://www.kevinfaith.cn/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-02-25T08:41:34.242Z","updated":"2018-02-25T08:41:34.202Z","comments":true,"path":"categories/index.html","permalink":"http://www.kevinfaith.cn/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"linux给终端、git设置代理","slug":"linux给终端、git设置代理","date":"2018-03-15T12:43:20.000Z","updated":"2018-03-15T13:16:28.632Z","comments":true,"path":"2018/03/15/linux给终端、git设置代理/","link":"","permalink":"http://www.kevinfaith.cn/2018/03/15/linux给终端、git设置代理/","excerpt":"概述：因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？","text":"概述：因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？ 准备工具：Shadowsocks-qt5 polipo 一台搭建有ss服务的海外服务器 安装步骤：安装ss-qt5：$ sudo add-apt-repository ppa:hzwhuang/ss-qt5 $ sudo apt-get update $ sudo apt-get install shadowsocks-qt5 安装完成，打开软件点击连接-&gt;添加-&gt;手动，输入服务器地址，端口，本地映射地址，本地端口，加密协议,保存，连接，就ojbk了。（怎么搭建Shadowsocks的教程请自行搜索，因为各种原因我就不一一陈诉了）这是我的配置截图： 安装polipo:命令很简单 $ sudo apt-get install polipo 修改配置文件：$ vi etc/polipo/config 原文件中已经有了两句话，那么需要新加入3句话： socksParentProxy = &quot;127.0.0.1:1080&quot; //这里对应着上面配置文件的本地地址和本地端口 socksProxyType = socks5 //这里对应上面的本地服务器类型 logLevel=4 :wq 保存退出 关闭和启动polip:$ sudo service polipo stop $ sudo service polipo start 验证和使用：$ curl ip.gs //查询你的IP地址和地理信息 $ http_proxy=http://localhost:8123 curl ip.gs //使用代理以后的ip地址和地理信息，如果发现ip和地理信息已经改变了，表示成功 以后终端使用代理前面都要加上http_proxy=http://localhost:8123 是不是很麻烦。别着急 设置别名每一次都输入这么一串命令实在太不人性化，解决方法就是给这个命令一个缩写的别名，比如“hp”。 vi ～/.bashrc 因为我用的是zsh,所以我的命令是vi ~/.zshrc在文档最后面加上 alias hp=&quot;http_proxy=http://localhost:8123&quot; :wq 保存退出执行$ source ~/.zshrc这样就不需要输入一长串代码了，需要用到代理的时候前面加个hp就好，实验一下 $ hp curl ip.gs Current IP / 当前 IP: 45.77.253.103 ISP / 运营商: choopa.com City / 城市: Singapore Country / 国家: Singapore 给git设置代理：上面的配置对git是没有用的，需要另行配置在终端下执行： $ git config --global http.proxy http://127.0.0.1:8123 但是这种方法在关机以后就不起效果了，需要重新输入一遍，如果嫌麻烦，可以修改 $ vi ~/.gitconfig 在[http]一行下面加入proxy = http://127.0.0.1:8123就可以一直奇效了","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"},{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"http://www.kevinfaith.cn/tags/Shadowsocks/"},{"name":"代理","slug":"代理","permalink":"http://www.kevinfaith.cn/tags/代理/"}]},{"title":"ubuntu下安装node版本管理工具NVM","slug":"ubuntu下安装node版本管理工具NVM","date":"2018-03-04T06:50:41.000Z","updated":"2018-03-15T12:57:45.555Z","comments":true,"path":"2018/03/04/ubuntu下安装node版本管理工具NVM/","link":"","permalink":"http://www.kevinfaith.cn/2018/03/04/ubuntu下安装node版本管理工具NVM/","excerpt":"概述：nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。","text":"概述：nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。 安装 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash如果没有curl可以 sudo apt install curl一下等进度条结束就安装好啦～^_^ 使用终端输入nvm你就可以看到nvm的帮助信息了 常用命令 nvm ls-remote //列出全部可以安装的版本号nvm install v7.7.0 //安装指定版本nvm use v7.8.0 //切换nodejs的版本，效果是全局的哦nvm current //查看当前使用的版本nvm ls //查看系统当前使用版本","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"},{"name":"nvm","slug":"nvm","permalink":"http://www.kevinfaith.cn/tags/nvm/"},{"name":"nodejs","slug":"nodejs","permalink":"http://www.kevinfaith.cn/tags/nodejs/"}]},{"title":"acm C语言鸡兔同笼问题","slug":"acm","date":"2017-03-02T16:00:00.000Z","updated":"2018-03-04T08:07:28.082Z","comments":true,"path":"2017/03/03/acm/","link":"","permalink":"http://www.kevinfaith.cn/2017/03/03/acm/","excerpt":"描述 浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。","text":"描述 浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。 输入 输入包括多组数据。每行包括2个数据：n、m(代表上面题目中提到的意思1≤n, m≤230)。n、m都是整数。 输出 每组数据的输出都只有一行，分别是鸽子的数量和兔子数量。如果输入的测试数据不能求得结果，那肯定是redraiment这个马大哈数错了，就输出”Error”提示他。 样例输入 94 3513 样例输出 12 23error 上代码 #include &lt;stdio.h&gt; int main() { int m,n,x,y; scanf(&quot;%d,%d&quot;,&amp;m,&amp;n); if (n&gt;=1,m&lt;=2^30 ) { if ( m % 2 == 0 ) { x=2*n-m/2; y=m/2-n; printf(&quot;%d,%d\\n&quot;,x,y); } else { printf(&quot;error\\n&quot;); } } else { printf(&quot;error\\n&quot;); } return 0; }","categories":[{"name":"acm编程","slug":"acm编程","permalink":"http://www.kevinfaith.cn/categories/acm编程/"}],"tags":[{"name":"acm","slug":"acm","permalink":"http://www.kevinfaith.cn/tags/acm/"}]},{"title":"acm C语言求两个数最大值","slug":"acm2","date":"2017-02-16T16:00:00.000Z","updated":"2018-03-04T08:07:05.014Z","comments":true,"path":"2017/02/17/acm2/","link":"","permalink":"http://www.kevinfaith.cn/2017/02/17/acm2/","excerpt":"C语言实验题――两个数比较","text":"C语言实验题――两个数比较描述 求2个数中较大者。 输入 第一行为测试的数据组数N，接下来的N行分别是两个待比较的整数 输出 输出N行，每一行的值为每组数中较大的整数 样例输入 21 215 10 样例输出 215 #include &lt;stdio.h&gt;int a,b;int main(int argc, char const *argv[]){ scanf(“%d,%d”,&amp;a,&amp;b); if (a&gt;b) { printf(“%d\\n”, a); } else { printf(“%d\\n”, b ); } return 0;}","categories":[{"name":"acm编程","slug":"acm编程","permalink":"http://www.kevinfaith.cn/categories/acm编程/"}],"tags":[{"name":"acm","slug":"acm","permalink":"http://www.kevinfaith.cn/tags/acm/"}]},{"title":"linux下实现计划任务的方法","slug":"linux2","date":"2017-02-15T16:00:00.000Z","updated":"2018-03-04T08:12:36.387Z","comments":true,"path":"2017/02/16/linux2/","link":"","permalink":"http://www.kevinfaith.cn/2017/02/16/linux2/","excerpt":"linux下实行计划任务的方法 执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world： at 10.00 tomorrowat &gt;etho“hello world”","text":"linux下实行计划任务的方法 执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world： at 10.00 tomorrowat &gt;etho“hello world” ctrl+D结束输入 job 1 at 2017-2-16 10:00 这样就ok了 2.如果要设置周期性任务，可以用crontab命令来完成，“crontab -e”编辑cron表，“crontab -l”查看当前cron表，“crontab -r“删除当前cron表，”crontab -u 用户名”以某用户的身份控制cron表。 crontab -e 编辑cron表，这时会打开vi，按“i”进入编辑模式，依此输入 “分钟 小时 日 月 周 [用户名] 命令”如：我想在2017.2.16，4点输出i love you * 4 16 2 * etho“i love you” cron时间符号 * 代表任意时间，代表分隔出不连续点，如2.5.7- 代表连续点。如2-4， 表示2.3.4 */ 表示每隔单位时间","categories":[{"name":"linux命令","slug":"linux命令","permalink":"http://www.kevinfaith.cn/categories/linux命令/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]},{"title":"linux下修改文件所属用户组和文件权限的方法","slug":"linux","date":"2017-02-14T16:00:00.000Z","updated":"2018-03-04T08:08:37.927Z","comments":true,"path":"2017/02/15/linux/","link":"","permalink":"http://www.kevinfaith.cn/2017/02/15/linux/","excerpt":"linux下修改文件所属用户组和修改文件权限的方法 修改文件所属用户组的命令是chown，这个命令的格式是 chown [-R] username filenamechown [-R] username:group filename","text":"linux下修改文件所属用户组和修改文件权限的方法 修改文件所属用户组的命令是chown，这个命令的格式是 chown [-R] username filenamechown [-R] username:group filename 第一个是修改文件所属的的用户，第二个修改文件所属用户组,-R属性为可选属性，意思是递归修改，也就是把文件下所有文件，包括子目录一起修改，大多数情况下-R 属性都是这个意思。 2.修改文件权限的命令是chmod，这个命令的格式是有两种设置方法有数字法与文字法i，数字法 就是用数字来代替rwx，r、w、x分别对应4、2、1，这个命令的格式为 chmod [-R] xyz filename 其中x代表owner权限，y代表group权限，z代表others权限，以上三种身份的值就是rwx的和，r代表读，w写 ，x运行，如果没有相应的权限则值为0。如想设置.bashrc文件的权限为owner为rwx，group权限为无，others权限为无，则命令如下 chmod 700 .bashrc","categories":[{"name":"linux命令","slug":"linux命令","permalink":"http://www.kevinfaith.cn/categories/linux命令/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]}]}