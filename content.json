{"meta":{"title":"kevin-blog","subtitle":"Look at the man in front of you and see why he's ahead and learn his way of doing it","description":"blog","author":"kevin","url":"http://www.kevinfaith.cn"},"pages":[{"title":"","date":"2018-05-14T13:14:15.386Z","updated":"2018-05-14T13:13:40.713Z","comments":true,"path":"baidu_verify_Uys2N16Mqu.html","permalink":"http://www.kevinfaith.cn/baidu_verify_Uys2N16Mqu.html","excerpt":"","text":"Uys2N16Mqu"},{"title":"","date":"2018-03-07T08:13:59.421Z","updated":"2018-03-07T08:12:58.500Z","comments":true,"path":"google85fc9525e2b1ce1e.html","permalink":"http://www.kevinfaith.cn/google85fc9525e2b1ce1e.html","excerpt":"","text":"google-site-verification: google85fc9525e2b1ce1e.html"},{"title":"","date":"2018-04-20T10:12:14.697Z","updated":"2018-04-20T10:12:14.637Z","comments":true,"path":"bitcoin/index.html","permalink":"http://www.kevinfaith.cn/bitcoin/index.html","excerpt":"","text":"Loading…"},{"title":"","date":"2018-04-20T10:18:00.134Z","updated":"2018-04-20T10:18:00.074Z","comments":true,"path":"about/index.html","permalink":"http://www.kevinfaith.cn/about/index.html","excerpt":"","text":"layout: aboutcomments: truereward: false"},{"title":"","date":"2018-04-20T04:50:42.847Z","updated":"2018-04-20T04:50:42.767Z","comments":false,"path":"categories/index.html","permalink":"http://www.kevinfaith.cn/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-04-20T04:48:48.102Z","updated":"2018-04-20T04:48:48.066Z","comments":false,"path":"tags/index.html","permalink":"http://www.kevinfaith.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"python版本管理工具:pyenv","slug":"python版本管理工具-pyenv","date":"2018-05-14T13:05:18.000Z","updated":"2018-05-14T14:36:20.815Z","comments":true,"path":"/posts/d8223d25/","link":"","permalink":"http://www.kevinfaith.cn/posts/d8223d25/","excerpt":"#### 简介：这几天在学习python，因为我学的是python3的语法，但是我ubuntu默认安装的是python2，我sqlmap需要的环境也是python2的，但是我需要python3的环境作为学习，这怎么办呢，经过查阅资料，学习，我发现了一个神器，python的版本管理工具：pyenv，他支持python多版本共存，并可以随时切换。且不会互相影响。","text":"#### 简介：这几天在学习python，因为我学的是python3的语法，但是我ubuntu默认安装的是python2，我sqlmap需要的环境也是python2的，但是我需要python3的环境作为学习，这怎么办呢，经过查阅资料，学习，我发现了一个神器，python的版本管理工具：pyenv，他支持python多版本共存，并可以随时切换。且不会互相影响。 安装pyenv：curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash 安装完毕会提醒： # Load pyenv automatically by adding # the following to ~/.bash_profile: export PATH=&quot;/root/.pyenv/bin:$PATH&quot; eval &quot;$(pyenv init -)&quot; eval &quot;$(pyenv virtualenv-init -)&quot; 因为我用的是zsh，zsh没有设置是不会读取~/.bash_profile的，so vi ~/.zshrc 在文档末粘贴： export PATH=&quot;/root/.pyenv/bin:$PATH&quot; eval &quot;$(pyenv init -)&quot; eval &quot;$(pyenv virtualenv-init -)&quot; :wq 保存退出! source ~/.zshrc 重启一下配置文件,然后执行： python -h /home/blog/source/_posts ‹ruby-2.3.0› $ pyenv -h 130 ↵ Usage: pyenv &lt;command&gt; [&lt;args&gt;] Some useful pyenv commands are: commands List all available pyenv commands local Set or show the local application-specific Python version global Set or show the global Python version shell Set or show the shell-specific Python version install Install a Python version using python-build uninstall Uninstall a specific Python version rehash Rehash pyenv shims (run this after installing executables) version Show the current Python version and its origin versions List all Python versions available to pyenv which Display the full path to an executable whence List all Python versions that contain the given executable See `pyenv help &lt;command&gt;&apos; for information on a specific command. For full documentation, see: https://github.com/pyenv/pyenv#readme 安装成功~ 简单的介绍一下常用的命令： pyenv install --list //查看可安装的python版本 pyenv install 3.5.0 //安装python3.5.0 pyenv rehash //更新数据库，在安装 Python 或者其他带有可执行文件的模块之后，需要对数据库进行更新： pyenv versions //查看当前使用的python版本 pyevn global 3.5.0 //切换python全局版本为3.5.0 pyenv uninstall 3.5.0 //删除python3.5.0","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"http://www.kevinfaith.cn/tags/工具/"},{"name":"python","slug":"python","permalink":"http://www.kevinfaith.cn/tags/python/"}]},{"title":"介绍一个安卓远控木马","slug":"介绍一个安卓远控木马","date":"2018-05-03T02:31:52.000Z","updated":"2018-05-03T04:18:35.825Z","comments":true,"path":"/posts/e716bc90/","link":"","permalink":"http://www.kevinfaith.cn/posts/e716bc90/","excerpt":"简介：安全10月24日讯 新型安卓远程管理工具“AhMyth Android RAT”的源码出现在GitHub上，用户可在GitHub下载并测试这款RAT。今天就体验一下这款安卓远控木马","text":"简介：安全10月24日讯 新型安卓远程管理工具“AhMyth Android RAT”的源码出现在GitHub上，用户可在GitHub下载并测试这款RAT。今天就体验一下这款安卓远控木马 工具：java的运行环境 AhMyth Android RAT应用程序 我的系统:ubuntu18.04 安装：方式一：源代码编译： git clone https://github.com/AhMyth/AhMyth-Android-RAT.git cd AhMyth-Android-RAT/AhMyth-Server npm install npm start 因为要用到java的环境，所以最好sudo npm start 方式二：二进制文件安装： 从https://github.com/AhMyth/AhMyth-Android-RAT/releases下载二进制文件 下载AhMyth_linux64.deb sudo dpkg -i AhMyth_linux64.deb sudo /usr/local/bin/ahmyth 软件截图 使用方式点击APK Builder,输入源IP，端口，然后Build,生成就好了，程序还可以支持绑定app,选择Bind With Another Apk，添加正常的apk包，Build就好。ps:如果你要测试局域网之外的客户端，需要有公网地址。 危害这个木马可以在免root的情况下不知不觉的远程打开受感染目标手机的摄像头，查看短信，录制麦克风，定位地址等一系列操作。 防御方式：不管什么木马，都需要你点击运行，才会起效，所以不要下载第三方应用，切记切记。特别是各位女孩子！！ 最后：本博客只是出于教育目的，对于因使用此工具而造成的任何直接或间接损失，我概不负责。","categories":[],"tags":[{"name":"木马","slug":"木马","permalink":"http://www.kevinfaith.cn/tags/木马/"},{"name":"Android RAT","slug":"Android-RAT","permalink":"http://www.kevinfaith.cn/tags/Android-RAT/"}]},{"title":"解决在/etc/porfile下设置环境变量以后zsh没有起效的问题","slug":"解决在-etc-porfile下设置环境变量以后zsh没有起效的问题","date":"2018-05-02T14:44:06.000Z","updated":"2018-05-03T03:38:01.021Z","comments":true,"path":"/posts/8987dd48/","link":"","permalink":"http://www.kevinfaith.cn/posts/8987dd48/","excerpt":"问题１：今天在添加java的环境变量的时候，我在/etc/profile添加了环境变量，因为我使用的是zsh，在source /etc/profile以后，zsh的主题和插件都没有了，java -version以后出现旗标信息，以为可以了，但是没有主题就很难受，重启shell。java -version提示没有此命令，懵~","text":"问题１：今天在添加java的环境变量的时候，我在/etc/profile添加了环境变量，因为我使用的是zsh，在source /etc/profile以后，zsh的主题和插件都没有了，java -version以后出现旗标信息，以为可以了，但是没有主题就很难受，重启shell。java -version提示没有此命令，懵~ 推测问题原因:由于在终端中source /etc/profile只是让本shell进程执行，相当于只是在本shell执行了环境变量，所以重启之后依旧失效 推测解决方法:在~/.zshrc中添加source /etc/profile 重启shell 输入java -version 完美解决! 通过百度发现:zsh其实并不使用/etc/profile文件，而是使用/etc/zsh/下面的zshenv、zprofile、zshrc、zlogin文件，并以这个顺序进行加载。 所以推测还有一种方法，在/etc/zsh/zprofile下面export相应的环境变量. 问题２：在后面的使用中，发现切换到root用户的时候，java的环境变量又不生效了。 解决办法:在/root/.bashrc文件尾部添加：source /etc/profile ok，完美解决","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]},{"title":"ubuntu实现定时弹窗","slug":"ubuntu实现定时弹窗","date":"2018-04-25T10:02:48.000Z","updated":"2018-04-25T12:02:16.121Z","comments":true,"path":"/posts/a4c0e361/","link":"","permalink":"http://www.kevinfaith.cn/posts/a4c0e361/","excerpt":"简介最近在头条上看到，长期久坐８小时以上会影响生育能力，突然有点慌，作为一个IT工作者，８小时．．．．然后我这人没有喝水的习惯，经常专注电脑，就想着，有没有什么办法可以定时提醒你喝水，休息的。","text":"简介最近在头条上看到，长期久坐８小时以上会影响生育能力，突然有点慌，作为一个IT工作者，８小时．．．．然后我这人没有喝水的习惯，经常专注电脑，就想着，有没有什么办法可以定时提醒你喝水，休息的。 方法因为我用的是ubuntu，用到提醒功能就让我想起了notify-send命令。notify-send是一个可以让你发送桌面通知的命令. 它的语法非常简单: notify-send [其他选项...] 标题 [内容] 提醒解决了，那怎么实现定时功能呢。通过我的查阅，我找到了crontab这个命令 在LINUX中，周期执行的任务一般由cron这个守护进程来处理[ps -ef|grep cron]。cron读取一个或多个配置文件，这些配置文件中包含了命令行及其调用时间。 cron的配置文件称为“crontab”，是“cron table”的简写。 实现方法vi time.cron //创建一个cron脚本 输入0 */1.5 * * * export DISPLAY=:0.0; notify-send [&quot;该休息一下啦&quot;] &quot;喝水！伸懒腰！&gt;动一动！&quot;","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"http://www.kevinfaith.cn/tags/shell/"},{"name":"crontab","slug":"crontab","permalink":"http://www.kevinfaith.cn/tags/crontab/"},{"name":"notify-send","slug":"notify-send","permalink":"http://www.kevinfaith.cn/tags/notify-send/"}]},{"title":"致我深爱的人","slug":"情感","date":"2018-04-24T14:18:35.000Z","updated":"2018-04-25T13:43:39.620Z","comments":true,"path":"/posts/cf2eaaff/","link":"","permalink":"http://www.kevinfaith.cn/posts/cf2eaaff/","excerpt":"人生总是充斥着各种无奈与不舍，在爱情的世界里，最美好的莫过于遇到一个心爱的人，最无奈的莫过于爱而不得。","text":"人生总是充斥着各种无奈与不舍，在爱情的世界里，最美好的莫过于遇到一个心爱的人，最无奈的莫过于爱而不得。如果有一天，你的爱情不能如愿以偿，不要伤心，不要哭泣，做好自己，时间会用另一种方式补偿给你的。 相爱是偶然的错过是必然的 在爱情的世界里，最美好的莫过于遇到一个心爱的人，最无奈的莫过于爱而不得。 有些人，也许比较幸运，在对的时间里，刚好遇见对的人，于是，就这样相爱了。 有些人，或许就比较不幸，在错的时间的里，恰巧遇见对的人，于是，只能伤感、失眠。 能够相爱，当然是最好的，郎情妾意，你侬我侬，想想都是一种幸福。 你爱着我，我爱着你，有人分享快乐，有人分担烦恼，难过的时候有人安慰，开心的时候有人喝彩。 不能相爱，固然徒增遗憾，痴心无处安放，思念又断不了，想想都是一种心酸。 我爱着你，却有缘无份，无论这份爱多么的高贵，无论这份爱多么的真挚，都与你无关。 爱情，总有一些爱，垂手可得；总有一些情，遥不可及。 其实，爱更多时候，都是充满无奈的；在得不到的时候，都会认为自己可以爱成理想中的样子，后来才发现，理想很远，要么是自己累了，要么是所爱的倦了。 最后，想说的永远说不出口，想见却再也没有合适的身份或理由，结果连想念都成了一种打扰。 但不能相爱，至少美好一直都在，因为最初的最美。只是时候未到，很多人不能理解，等时间到了，看开了，看淡了，你就会明白，有些爱，不一定要拥有；有些情，不一定要得到。 相爱也好，不能相爱也罢，只要生命中，有出现过这个人就行了 其实爱上你我从未后悔，但我最遗憾的，是你的遗憾和我有关，但庆幸的是我终于熬过了那段看谁都像你，干什么都会想起你的，所以的一切都是关于你的日子，我终于可以不问归期～不在联系。但有些东西，会淡，但 不会忘 ————致我曾经深爱的那个人","categories":[],"tags":[{"name":"矫情","slug":"矫情","permalink":"http://www.kevinfaith.cn/tags/矫情/"},{"name":"情感","slug":"情感","permalink":"http://www.kevinfaith.cn/tags/情感/"},{"name":"爱情","slug":"爱情","permalink":"http://www.kevinfaith.cn/tags/爱情/"}]},{"title":"区块链","slug":"区块链","date":"2018-04-21T03:44:39.000Z","updated":"2018-04-21T06:22:03.020Z","comments":true,"path":"/posts/89374c81/","link":"","permalink":"http://www.kevinfaith.cn/posts/89374c81/","excerpt":"简介：最近小米出了一个“区块链产品”：wifi链，现在还是内侧版，我也下了个玩玩，比特币的时候没有做第一批吃螃蟹的，现在面前就有个机会，当然要体验一把。这篇博客会说下什么是区块链。","text":"简介：最近小米出了一个“区块链产品”：wifi链，现在还是内侧版，我也下了个玩玩，比特币的时候没有做第一批吃螃蟹的，现在面前就有个机会，当然要体验一把。这篇博客会说下什么是区块链。 什么是区块链：按照wiki是这么描述的：区块链（Blockchain）是分布式数据库识别、传播和记载信息的智能话对等网络，也称为价值互联网，中本聪在2008年，于《比特币白皮书》中提出了“区块链”概念，本在2009年创立了比特币社会网络，开发了第一个区块，即“创世区块”。 简单的来说，区块链的本质就是一种特殊的分布式数据库，既然是数据库，当然是用来储存信息的，其次既然是分布式的，所以任何人都可以假设服务器，加入区块链网络，成为其中的一个节点，既然是去中心化，所以没有任何的管理員，每一个节点都是平等的。 1.理解：简单的理解来说就是区块链具有：1.数据的安全性和交易的可追述性，区块链技术能使得交易数据完全公开透明，并可以提供完整的信息流。2.区块链的数据具有无法篡改的特性. 2.起源区块链起源于比特币，是比特币网络参与者们集体维护的一个总账本。但创新者们已经开始用区块链技术开发远超比特币自身的众多应用。从这个意义讲，我们又可以认为比特币是区块链技术的第一个应用。 区块区块链由一个个区块（block）组成。区块很像数据库的记录，每次写入数据，就是创建一个区块。每一个区块包含了一个区块头，一个区块尾。 区块头（Head）：记录当前区块的特征值 区块体（Body）：实际数据 区块头里包含了：生成时间，实际数据（即区块体）的哈希，上一个区块的哈希，每一个区块的哈希都是不同的，简单来说就是区块头里是各种信息的加密哈希。而且哈希近乎不会被破解，而且区块与哈希是一一对应的，每个区块的哈希都是针对”区块头”（Head）计算的。也就是说，把区块头的各项特征值，按照顺序连接在一起，组成一个很长的字符串，再对这个字符串计算哈希。而且区块里面的任何内容只要变了，（包括上一个区块的内容）哈希都会被改的面目全非。这就是区块的唯一性，因为没有人知道上一个区块的内容，而且区块的数据一旦写入，就无法篡改。前面说过每一个区块都连着上一个区块，所以这就是区块链名字的由来。可以这样简单的理解区块，就是每一次的交易的信息。 矿工的任务：矿工要做的就是计算每一个区块头的哈希，前面说过，每一个区块头都包含了上一个区块的哈希，把区块头的各项特征值，按照顺序连接在一起，组成一个很长的字符串，再对这个字符串计算哈希，这就是矿工的任务了，可能有人会问矿工是怎么得到上一个区块的内容的呢，这是因为中本聪规定，任何的交易都会把区块内容分发到所有的矿工手里，然后矿工进行计算，读到这里，你可能会有一个疑问，人们都说采矿很难，可是采矿不就是用计算机算出一个哈希吗，这正是计算机的强项啊，怎么会变得很难，迟迟算不出来呢？那你就大错特错了，中本聪有个变态的规定：原来不是任意一个哈希都可以，只有满足条件的哈希才会被区块链接受。这个条件特别苛刻，使得绝大部分哈希都不满足要求，必须重算。 前面说过当前区块的哈希由区块头唯一决定。如果要对同一个区块反复计算哈希，就意味着，区块头必须不停地变化，否则不可能算出不一样的哈希。区块头里面所有的特征值都是固定的，为了让区块头产生变化，中本聪故意增加了一个随机项，叫做 Nonce。其实这个不如叫做幸运数，只有你足够幸运，在一次次失败中，反复修改幸运值，重复这个过程直到生成一串有效的编号。这就是采矿如此之慢的根本原因，运气好的话，也许一会就找到了 Nonce。运气不好的话，可能算完了21.47亿次，都没有发现 Nonce，即当前区块体不可能算出满足条件的哈希。这时，协议允许矿工改变区块体，开始新的计算。这就奇怪了，这些矿工为什么要拼命干这看似无意义的事情呢？其实矿工是有报酬的，只要你生成一张满足条件的区块，你就会获得比特币的报酬。 难度系数的动态调节：正如上一节所说，采矿具有随机性，没法保证正好十分钟产出一个区块，有时一分钟就算出来了，有时几个小时可能也没结果。总体来看，随着硬件设备的提升，以及矿机的数量增长，计算速度一定会越来越快。 为了将产出速率恒定在十分钟，中本聪还设计了难度系数的动态调节机制。他规定，难度系数每两周（2016个区块）调整一次。如果这两周里面，区块的平均生成速度是9分钟，就意味着比法定速度快了10%，因此接下来的难度系数就要调高10%；如果平均生成速度是11分钟，就意味着比法定速度慢了10%，因此接下来的难度系数就要调低10%。难度系数越调越高，导致了采矿越来越难。 确认区块有效性当某挖矿小组幸运的生成了一张有意义的账簿，为了得到奖励，必须立刻请其它小组确认自己的工作。前面说过，当前村里有7个挖矿组，所以这个小组必须将有效的区块信息发到所以的挖矿小组手中，确认区块有效性，这个确认非常简单，因为区块头中包含了上一块的哈希，只要这个区块中有上一块的区块，和区块信息，就确认成功。负责不予确认。 区块链的分叉即使区块链是可靠的，现在还有一个问题没有解决：如果两个人同时向区块链写入数据，也就是说，同时有两个区块加入，因为它们都连着前一个区块，就形成了分叉。这时应该采纳哪一个区块呢？现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。由于新区块的生成速度由计算能力决定，所以这条规则就是说，拥有大多数计算能力的那条分支，就是正宗的区块链。这一章的内容比较繁琐，涉及到哈希，区块等等知识，有兴趣的可以去阮一峰老师的博客看一下，还有一个叫做伯乐在线的，我的这篇文章也是参考他们的博客写的。 最后如果有写的不对的地方可以联系我修改","categories":[],"tags":[{"name":"区块链","slug":"区块链","permalink":"http://www.kevinfaith.cn/tags/区块链/"},{"name":"以太坊","slug":"以太坊","permalink":"http://www.kevinfaith.cn/tags/以太坊/"}]},{"title":"学会如何让你在网络上变的相对匿名","slug":"学会如何让你在网络上变的相对匿名","date":"2018-04-10T08:42:02.000Z","updated":"2018-04-21T05:02:48.874Z","comments":true,"path":"/posts/11406/","link":"","permalink":"http://www.kevinfaith.cn/posts/11406/","excerpt":"简介 因为最近在弄渗透测试，就担心那天被查水表了，就想起怎么让自己的变的相对匿名呢，这时我想到了tor，“Tor（The Onion Router）是第二代洋葱路由（onion routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。Tor专门防范流量过滤、嗅探分析。”","text":"简介 因为最近在弄渗透测试，就担心那天被查水表了，就想起怎么让自己的变的相对匿名呢，这时我想到了tor，“Tor（The Onion Router）是第二代洋葱路由（onion routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。Tor专门防范流量过滤、嗅探分析。” 形象的说：你想把一封信交给一个人（化名小明），你走到大街上，随便叫一个人A，让他把这封信交给小明，A走在路上把这封信交给了B，让他交给小明，B又把这封信交给了C，然后C才把信交给了小明，这中间经过很多次的转接，就很难找寻到这封信的寄件人，这差不多就是tor的实现方式了。（这只是tor的实现方式，他的原理我就不一一叙述了，感兴趣的可以google，百度，如果你真的喜欢他，也可以为tor做点贡献，在自己的服务器上搭建一个tor的节点） 但是这有个问题，tor好像只有在浏览器上的，能不能把他应用到别处呢，比如在全局代理，比如linux的Terminal（终端）,因为渗透测试很多时候需要在终端下进行。 方法实现 通过一通折腾，我发现了tor官网提供了与系统相对于的一款工具Expert Bundle，他只包含了tor工具，不含浏览器，tor虽然默认提供了一些公开的桥，您可以轻松启用这些功能，不幸的是，由于这些桥梁是公开分发的，因此审查员很容易阻止其中的一些桥梁，因此其中一些桥梁可能无法工作，需要自己搭建shadowsocks,用自己服务器做桥，实现shadowsocks+Tor的匿名上网，因为shadowsocks只支持socks5的流量，所以还需要用到privoxy。 安装tor： 在linux下，因为我用的是ubuntu，打开终端输入： sudo apt install tor windows因为我不熟悉，安装有兴趣的请去官方文档查看。安装完毕！ 因为shadowsocks只支持socks5的流量，所以配置 vi etc/tor/torrc在最下面插入 SOCKS5proxy 127.0.0.1:1080 //通过socks5的代理 ReachableAddresses *:80,*:443 //允许80,443端口 ReachableAddresses reject *:* :wq保存，重启tor服务，service tor restart 安装shadowsocks： 因为一些特殊原因，搭建方法我不能说，需要匿名自行百度，关键词（shadowsocks搭建教程），Shadowsocks（中文名称：影梭）是使用Python、C++、C#以及Go等语言开发、基于Apache许可证的开放源代码软件，用于保护网络流量、加密数据传输以及突破中国网络审查。 安装privoxy： 还是那句话因为很多应用是不支持socks5的，（比如Terminal终端）所以这里就需要用到privoxy了，privoxy有将socks代理转为http代理的功能。 好～话不多说，安装： sudo apt install privoxy 安装完毕后，配置安装文件 因为tor监听的端口是9050，所以我们把127.0.0.1:9050的socks5的流量转换成html、htmls的 sudo vi /etc/privoxy/config 在里面插入一行 forward-socks5t / 127.0.0.1:9050 . listen-address 0.0.0.0:8118 后面的“.”不要忘了。启动一下privoxy服务。 sudo service privoxy restart 这样就可以给终端设置tor匿名了。 vi ~/.zshc 在里面添加一句 alias hp=&quot;http_proxy=127.0.0.1:8118&quot; 这样只要你在需要用到匿名的时候，在命令前加一句hp，就可以实现流量相对匿名了。 测试：hp curl ip.sb 就会显示你当前代理以后的源ip，如果显示ip是国外的，表示你成功了。 最后因为最近失恋了，心情很郁闷，哎，blog写的效率有点低，各位多担待。","categories":[],"tags":[{"name":"网络","slug":"网络","permalink":"http://www.kevinfaith.cn/tags/网络/"},{"name":"梯子","slug":"梯子","permalink":"http://www.kevinfaith.cn/tags/梯子/"}]},{"title":"beef漏洞利用框架安装.md","slug":"beef漏洞利用框架安装","date":"2018-04-07T14:08:20.000Z","updated":"2018-04-20T04:52:45.236Z","comments":true,"path":"/posts/26725/","link":"","permalink":"http://www.kevinfaith.cn/posts/26725/","excerpt":"简介BeEF是目前欧美最流行的web框架攻击平台，它的全称是 the Browser exploitation framework project.最近两年国外各种黑客的会议都有它的介绍，很多pentester对这个工具都有很高的赞美。BeEF是我见过的最好的xss利用框架，他同时能够配合metasploit进一步渗透主机，强大的有些吓人！！","text":"简介BeEF是目前欧美最流行的web框架攻击平台，它的全称是 the Browser exploitation framework project.最近两年国外各种黑客的会议都有它的介绍，很多pentester对这个工具都有很高的赞美。BeEF是我见过的最好的xss利用框架，他同时能够配合metasploit进一步渗透主机，强大的有些吓人！！ 安装：１．先安装一些必要的工具：sudo apt-get install curl git nodejs ２．因为beef是ruby编写的，所以首先安装ruby管理工具：curl -sSL https://get.rvm.io | bash -s stable source /etc/profile.d/rvm.sh rvm install 2.3.0 //安装ruby2.3.0版本 rvm use 2.3.0 --default //选择系统默认版本为2.3.0 ３．安装beff:git clone git://github.com/beefproject/beef.git cd beef 4.安装bundle:gem install bundle bundle install 5.更新beEF:./update-beef 6.启动beEF:./beef 7.启动浏览器：http://127.0.0.1:3000/ui/panel //进入beef后台管理页面 使用默认用户名 beef 密码 beef登录 8.使用：BeEF自带了一个hack页面 http://127.0.0.1:3000/demos/basic.html 当有人点击这个页面，就可以控制他的浏览器，钓鱼，社工，随你发挥。 补充：运行curl -sSL https://get.rvm.io | bash -s stable 时会报公钥问题。根据提示的公钥，再运行gpg –keyserver hkp://keys.gnupg.net –recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3成功运行后，再一次curl -sSL https://get.rvm.io | bash -s stable 来安装环境。","categories":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://www.kevinfaith.cn/categories/渗透测试/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://www.kevinfaith.cn/tags/渗透测试/"},{"name":"XSS","slug":"XSS","permalink":"http://www.kevinfaith.cn/tags/XSS/"}]},{"title":"介绍一款牛逼的渗透测试框架","slug":"介绍一款牛逼的社会工程学字典生成器","date":"2018-03-24T12:39:13.000Z","updated":"2018-04-20T04:52:45.244Z","comments":true,"path":"/posts/3818/","link":"","permalink":"http://www.kevinfaith.cn/posts/3818/","excerpt":"简介工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（https://github.com/alpha1e0/pentestdb.git）","text":"简介工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（https://github.com/alpha1e0/pentestdb.git） 安装PentestDB支持windows/linux/macos，需安装python 2.6.x 或 2.7.x运行。 git clone https://github.com/alpha1e0/pentestdb.git 安装依赖：项目中的脚本文件依赖于lxml，linux系统一般默认安装lxml，如果没有可通过以下方式安装： pip install lxml apt-get install lxml yum install lxml windows用户：我对windows不怎么了解，具体就自行百度了。 解决nmap依赖项目中的C段扫描依赖于nmap扫描器，到https://nmap.org/download.html下载nmap，在windows下需要设置环境变量，让系统能够找到nmap.exe。还是那句话，在windows下怎么添加环境变量，我就不班门弄斧了，自行百度吧。linux是不需要的。 使用：1.Exploit系统pen.py的exploit子命令提供了exploit模块相关操作，exploit模块是一个轻量级的exploit框架，可以编写各种web漏洞的exploit： 搜索exploit信息 增加、删除、修改exploit信息 执行某个exploit 搜索并批量执行exploitexploit保存在项目根目录下的exploit目录下例如： #列举、搜索、注册、更新、删除 pen.py exploit -l pen.py exploit -q appName:joomla pen.py exploit --register exploit pen.py exploit --update cms_joomla_3_4_session_object_injection.py pen.py exploit -d &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot; pen.py exploit --detail &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot; #执行exploit pen.py exploit -e cms_joomla_3_4_session_object_injection.py -u http://127.0.0.1:1234 --attack pen.py exploit -s appName:joomla -u http://127.0.0.1:1234 --verify pen.py exploit -s appName:joomla -u @url.txt 2.服务端应用识别pen.py的service子命令提供了服务端应用识别的功能，能够识别服务器信息，包括： 操作系统 web服务器 web中间件 CMS等 例如： pen.py service http://xxx.com # 开启CMS识别加强模式 pen.py service http://xxx.com --cms 3.社工密码字典生成pen.py的password子命令提供了根据社工信息生成密码字典的功能，能够设置不同关键字生成密码字典 该模块可通过以下要素组合生成密码： 全名，–fullname，名字中各个字中间加空格，例如”lin zhi ling” 昵称，–nickname 英文名称，–englishname 伴侣名字，–partnername 生日，–birthday 手机号，–phone QQ号，–qq 公司名称，–company 域名，–domian 老密码，–oldpasswd 关键字，–keyword 关键数字，–keynumbers 例如： pen.py password --fullname &quot;lin zhi ling&quot; --birthday 1980-1-1 --phone 12344445555 --qq 34233888 -o password.txt 4.URI敏感文件爆破pen.py的uribrute子命令提供了URI敏感文件爆破，URI爆破字典生成的功能 例如： # 生成web打包备份、敏感文件字典，后缀名使用jsp和jspx，自定义关键字xxx，指定输出结果dict.txt pen.py uribrute -t webbak,interestfile -e jspx,jsp --keyword &quot;xxx&quot; -o dict.txt # 爆破目标站点，使用safeurl bypass waf pen.py uribrute -b -u http://127.0.0.1/discuz/6.0/ --safeurl &quot;http://127.0.0.1/discuz/6.0/&quot; # 爆破url.txt中的所有站点，爆破敏感文件，自定义notfound页面关键字为“找不到页面” pen.py uribrute -b -u @urls.txt -t interestfile --notfound &quot;找不到页面&quot; 5.Google Hacking功能pen.py的search子命令提供了Google Hacking的功能，目前支持以下搜索引擎： bing google baidu 例如： pen.py search &quot;inurl:viewthread.php&quot; -s 10 -o tmp.txt # --unique设定域名唯一，相同域名只记录一个搜索结果: pen.py search &quot;inurl:viewthread.php&quot; -s 10 --unique -o tmp.txt 注意，由于百度关闭了 localsearch 功能，因此目前 baidu 方式目前暂不可用。 6.子域名爆破pen.py的domain子命令提供了子域名爆破功能： 域传送漏洞检测、利用 DNS字典爆破 Google Hacking搜索 注：支持输出到html文件，使用-o xxx.html做为输出文件即可例如： # 使用域传送技术、Google Hacking对aaa.com 进行子域名爆破 pen.py domamin aaa.com -t zg # 使用字典爆破子域名，自定义字典文件domain_large.txt，同时指定爆破顶级域名 pen.py domain aaa.com -t d --dict domain_large.txt --topdomian 7.C段扫描pen.py的subnet子命令提供了C段扫描功能。 注：支持输出到html文件，使用-o xxx.html做为输出文件即可 例如： pen.py subnet test.com -o result.html 8.编码pen.py的encode子命令提供了编码的功能 编码方式-t/–type支持： url url-all hex decimal unicode unicode-all md5 sha base64 base32 html html-all php-chr utf7 utf7-all其中**-all编码会编码所有字符包括非特殊字符 非ASCII编码-m/–method支持： utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式 例如： pen.py encode -t unicode &quot;aaa=你好&quot; pen.py encode -t url-all -m gbk &quot;id=你好&quot; pen.py encode -t md5 &quot;aaaaaaaa&quot; 9.解码pen.py的decode子命令提供了解码的功能，并提供非ASCII编码编码推测功能 解码方式-t/–type支持： auto(默认) hex url unicode decimal base64 base32 html php-chr utf7其中auto方式会自动检测url类型、hex类型的字符串并进行解码 非ASCII编码-m/–method支持： utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式 例如： pen.py decode -t base64 5ZOI5ZOI pen.py decode -m utf8 aaa%E5%93%88%E5%93%88 pen.py encode -t hex &quot;\\x61\\x61\\xe5\\x93\\x88\\xe5\\x93\\x88&quot; # 推测编码 pen.py decode -d &quot;\\x61\\x61\\xe5\\x93\\x88\\xe5\\x93\\x88&quot; 我就列举了一些常用的功能，还有很多非常不错的功能，如“ Mail账户验证/爆破”、“文件处理功能”，“字典维护”等等。我就不一一列举了，感兴趣的可以去项目地址自行查看“https://github.com/alpha1e0/pentestdb.git”。","categories":[],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://www.kevinfaith.cn/tags/渗透测试/"},{"name":"kali","slug":"kali","permalink":"http://www.kevinfaith.cn/tags/kali/"}]},{"title":"linux给终端、git设置代理","slug":"linux给终端、git设置代理","date":"2018-03-15T12:43:20.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/38299/","link":"","permalink":"http://www.kevinfaith.cn/posts/38299/","excerpt":"概述：因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？","text":"概述：因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？ 准备工具：Shadowsocks-qt5 polipo 一台搭建有ss服务的海外服务器 安装步骤：安装ss-qt5：$ sudo add-apt-repository ppa:hzwhuang/ss-qt5 $ sudo apt-get update $ sudo apt-get install shadowsocks-qt5 安装完成，打开软件 点击连接-&gt;添加-&gt;手动，输入服务器地址，端口，本地映射地址，本地端口，加密协议,保存，连接，就ojbk了。（怎么搭建Shadowsocks的教程请自行搜索，因为各种原因我就不一一陈诉了）这是我的配置截图： 安装polipo:命令很简单 $ sudo apt-get install polipo 修改配置文件：$ vi etc/polipo/config 原文件中已经有了两句话，那么需要新加入3句话： socksParentProxy = &quot;127.0.0.1:1080&quot; //这里对应着上面配置文件的本地地址和本地端口 socksProxyType = socks5 //这里对应上面的本地服务器类型 logLevel=4 :wq 保存退出 关闭和启动polip:$ sudo service polipo stop $ sudo service polipo start 验证和使用：$ curl ip.gs //查询你的IP地址和地理信息 $ http_proxy=http://localhost:8123 curl ip.gs //使用代理以后的ip地址和地理信息，如果发现ip和地理信息已经改变了，表示成功 以后终端使用代理前面都要加上http_proxy=http://localhost:8123 是不是很麻烦。别着急 设置别名每一次都输入这么一串命令实在太不人性化，解决方法就是给这个命令一个缩写的别名，比如“hp”。 vi ～/.bashrc 因为我用的是zsh,所以我的命令是vi ~/.zshrc在文档最后面加上 alias hp=&quot;http_proxy=http://localhost:8123&quot; :wq 保存退出执行$ source ~/.zshrc这样就不需要输入一长串代码了，需要用到代理的时候前面加个hp就好，实验一下 $ hp curl ip.gs Current IP / 当前 IP: 45.77.253.103 ISP / 运营商: choopa.com City / 城市: Singapore Country / 国家: Singapore 给git设置代理：上面的配置对git是没有用的，需要另行配置在终端下执行： $ git config --global http.proxy http://127.0.0.1:8123 但是这种方法在关机以后就不起效果了，需要重新输入一遍，如果嫌麻烦，可以修改 $ vi ~/.gitconfig 在[http]一行下面加入proxy = http://127.0.0.1:8123就可以一直奇效了","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"},{"name":"代理","slug":"代理","permalink":"http://www.kevinfaith.cn/tags/代理/"},{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"http://www.kevinfaith.cn/tags/Shadowsocks/"}]},{"title":"ubuntu下安装node版本管理工具NVM","slug":"ubuntu下安装node版本管理工具NVM","date":"2018-03-04T06:50:41.000Z","updated":"2018-04-20T04:52:45.244Z","comments":true,"path":"/posts/24809/","link":"","permalink":"http://www.kevinfaith.cn/posts/24809/","excerpt":"概述：nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。","text":"概述：nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。 安装 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash如果没有curl可以 sudo apt install curl一下等进度条结束就安装好啦～^_^ 使用终端输入nvm你就可以看到nvm的帮助信息了 常用命令 nvm ls-remote //列出全部可以安装的版本号nvm install v7.7.0 //安装指定版本nvm use v7.8.0 //切换nodejs的版本，效果是全局的哦nvm current //查看当前使用的版本nvm ls //查看系统当前使用版本","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"},{"name":"nvm","slug":"nvm","permalink":"http://www.kevinfaith.cn/tags/nvm/"},{"name":"nodejs","slug":"nodejs","permalink":"http://www.kevinfaith.cn/tags/nodejs/"}]},{"title":"acm C语言鸡兔同笼问题","slug":"acm","date":"2017-03-02T16:00:00.000Z","updated":"2018-04-20T04:52:45.236Z","comments":true,"path":"/posts/15133/","link":"","permalink":"http://www.kevinfaith.cn/posts/15133/","excerpt":"描述 浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。","text":"描述 浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。 输入 输入包括多组数据。每行包括2个数据：n、m(代表上面题目中提到的意思1≤n, m≤230)。n、m都是整数。 输出 每组数据的输出都只有一行，分别是鸽子的数量和兔子数量。如果输入的测试数据不能求得结果，那肯定是redraiment这个马大哈数错了，就输出”Error”提示他。 样例输入 94 3513 样例输出 12 23error 上代码 #include &lt;stdio.h&gt; int main() { int m,n,x,y; scanf(&quot;%d,%d&quot;,&amp;m,&amp;n); if (n&gt;=1,m&lt;=2^30 ) { if ( m % 2 == 0 ) { x=2*n-m/2; y=m/2-n; printf(&quot;%d,%d\\n&quot;,x,y); } else { printf(&quot;error\\n&quot;); } } else { printf(&quot;error\\n&quot;); } return 0; }","categories":[{"name":"acm编程","slug":"acm编程","permalink":"http://www.kevinfaith.cn/categories/acm编程/"}],"tags":[{"name":"acm","slug":"acm","permalink":"http://www.kevinfaith.cn/tags/acm/"}]},{"title":"acm C语言求两个数最大值","slug":"acm2","date":"2017-02-16T16:00:00.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/22498/","link":"","permalink":"http://www.kevinfaith.cn/posts/22498/","excerpt":"C语言实验题――两个数比较","text":"C语言实验题――两个数比较描述 求2个数中较大者。 输入 第一行为测试的数据组数N，接下来的N行分别是两个待比较的整数 输出 输出N行，每一行的值为每组数中较大的整数 样例输入 21 215 10 样例输出 215 #include &lt;stdio.h&gt;int a,b;int main(int argc, char const *argv[]){ scanf(“%d,%d”,&amp;a,&amp;b); if (a&gt;b) { printf(“%d\\n”, a); } else { printf(“%d\\n”, b ); } return 0;}","categories":[{"name":"acm编程","slug":"acm编程","permalink":"http://www.kevinfaith.cn/categories/acm编程/"}],"tags":[{"name":"acm","slug":"acm","permalink":"http://www.kevinfaith.cn/tags/acm/"}]},{"title":"linux下实现计划任务的方法","slug":"linux2","date":"2017-02-15T16:00:00.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/15245/","link":"","permalink":"http://www.kevinfaith.cn/posts/15245/","excerpt":"linux下实行计划任务的方法 执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world： at 10.00 tomorrowat &gt;etho“hello world”","text":"linux下实行计划任务的方法 执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world： at 10.00 tomorrowat &gt;etho“hello world” ctrl+D结束输入 job 1 at 2017-2-16 10:00 这样就ok了 2.如果要设置周期性任务，可以用crontab命令来完成，“crontab -e”编辑cron表，“crontab -l”查看当前cron表，“crontab -r“删除当前cron表，”crontab -u 用户名”以某用户的身份控制cron表。 crontab -e 编辑cron表，这时会打开vi，按“i”进入编辑模式，依此输入 “分钟 小时 日 月 周 [用户名] 命令”如：我想在2017.2.16，4点输出i love you * 4 16 2 * etho“i love you” cron时间符号 * 代表任意时间，代表分隔出不连续点，如2.5.7- 代表连续点。如2-4， 表示2.3.4 */ 表示每隔单位时间","categories":[{"name":"linux命令","slug":"linux命令","permalink":"http://www.kevinfaith.cn/categories/linux命令/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]},{"title":"linux下修改文件所属用户组和文件权限的方法","slug":"linux","date":"2017-02-14T16:00:00.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/51489/","link":"","permalink":"http://www.kevinfaith.cn/posts/51489/","excerpt":"linux下修改文件所属用户组和修改文件权限的方法 修改文件所属用户组的命令是chown，这个命令的格式是 chown [-R] username filenamechown [-R] username:group filename","text":"linux下修改文件所属用户组和修改文件权限的方法 修改文件所属用户组的命令是chown，这个命令的格式是 chown [-R] username filenamechown [-R] username:group filename 第一个是修改文件所属的的用户，第二个修改文件所属用户组,-R属性为可选属性，意思是递归修改，也就是把文件下所有文件，包括子目录一起修改，大多数情况下-R 属性都是这个意思。 2.修改文件权限的命令是chmod，这个命令的格式是有两种设置方法有数字法与文字法i，数字法 就是用数字来代替rwx，r、w、x分别对应4、2、1，这个命令的格式为 chmod [-R] xyz filename 其中x代表owner权限，y代表group权限，z代表others权限，以上三种身份的值就是rwx的和，r代表读，w写 ，x运行，如果没有相应的权限则值为0。如想设置.bashrc文件的权限为owner为rwx，group权限为无，others权限为无，则命令如下 chmod 700 .bashrc","categories":[{"name":"linux命令","slug":"linux命令","permalink":"http://www.kevinfaith.cn/categories/linux命令/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]}]}