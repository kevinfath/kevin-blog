{"meta":{"title":"kevin-blog","subtitle":"Look at the man in front of you and see why he's ahead and learn his way of doing it","description":"blog","author":"kevin","url":"http://www.kevinfaith.cn"},"pages":[{"title":"","date":"2018-03-07T08:13:59.421Z","updated":"2018-03-07T08:12:58.500Z","comments":true,"path":"google85fc9525e2b1ce1e.html","permalink":"http://www.kevinfaith.cn/google85fc9525e2b1ce1e.html","excerpt":"","text":"google-site-verification: google85fc9525e2b1ce1e.html"},{"title":"","date":"2018-04-20T10:18:00.134Z","updated":"2018-04-20T10:18:00.074Z","comments":true,"path":"about/index.html","permalink":"http://www.kevinfaith.cn/about/index.html","excerpt":"","text":"layout: aboutcomments: truereward: false"},{"title":"","date":"2018-04-20T04:50:42.847Z","updated":"2018-04-20T04:50:42.767Z","comments":false,"path":"categories/index.html","permalink":"http://www.kevinfaith.cn/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-04-20T10:12:14.697Z","updated":"2018-04-20T10:12:14.637Z","comments":true,"path":"bitcoin/index.html","permalink":"http://www.kevinfaith.cn/bitcoin/index.html","excerpt":"","text":"Loading…"},{"title":"","date":"2018-04-20T04:48:48.102Z","updated":"2018-04-20T04:48:48.066Z","comments":false,"path":"tags/index.html","permalink":"http://www.kevinfaith.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"学会如何让你在网络上变的相对匿名","slug":"学会如何让你在网络上变的相对匿名","date":"2018-04-10T08:42:02.000Z","updated":"2018-04-20T04:52:45.244Z","comments":true,"path":"/posts/11406/","link":"","permalink":"http://www.kevinfaith.cn/posts/11406/","excerpt":"简介 因为最近在弄渗透测试，就担心那天被查水表了，就想起怎么让自己的变的相对匿名呢，这时我想到了tor，“Tor（The Onion Router）是第二代洋葱路由（onion routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。Tor专门防范流量过滤、嗅探分析。”","text":"简介 因为最近在弄渗透测试，就担心那天被查水表了，就想起怎么让自己的变的相对匿名呢，这时我想到了tor，“Tor（The Onion Router）是第二代洋葱路由（onion routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。Tor专门防范流量过滤、嗅探分析。” 形象的说：你想把一封信交给一个人（化名小明），你走到大街上，随便叫一个人A，让他把这封信交给小明，A走在路上把这封信交给了B，让他交给小明，B又把这封信交给了C，然后C才把信交给了小明，这中间经过很多次的转接，就很难找寻到这封信的寄件人，这差不多就是tor的实现方式了。（这只是tor的实现方式，他的原理我就不一一叙述了，感兴趣的可以google，百度，如果你真的喜欢他，也可以为tor做点贡献，在自己的服务器上搭建一个tor的节点） 但是这有个问题，tor好像只有在浏览器上的，能不能把他应用到别处呢，比如在全局代理，比如linux的Terminal（终端）,因为渗透测试很多时候需要在终端下进行。 方法实现 通过一通折腾，我发现了ttor官网提供了与系统相对于的一款工具Expert Bundle，他只包含了tor工具，不含浏览器，tor虽然默认提供了一些公开的桥，您可以轻松启用这些功能，不幸的是，由于这些桥梁是公开分发的，因此审查员很容易阻止其中的一些桥梁，因此其中一些桥梁可能无法工作，需要自己搭建shadowsocks,用自己服务器做桥，实现shadowsocks+Tor的匿名上网，因为shadowsocks只支持socks5的流量，所以还需要用到privoxy。 安装tor： 在linux下，因为我用的是ubuntu，打开终端输入： sudo apt install tor windows因为我不熟悉，安装有兴趣的请去官方文档查看。安装完毕！ 因为shadowsocks只支持socks5的流量，所以配置 vi etc/tor/torrc在最下面插入 SOCKS5proxy 127.0.0.1:1080 //通过socks5的代理 ReachableAddresses *:80,*:443 //允许80,443端口 ReachableAddresses reject *:* :wq保存，重启tor服务，service tor restart 安装shadowsocks： 因为一些特殊原因，搭建方法我不能说，需要匿名自行百度，关键词（shadowsocks搭建教程），Shadowsocks（中文名称：影梭）是使用Python、C++、C#以及Go等语言开发、基于Apache许可证的开放源代码软件，用于保护网络流量、加密数据传输以及突破中国网络审查。 安装privoxy： 还是那句话因为很多应用是不支持socks5的，（比如Terminal终端）所以这里就需要用到privoxy了，privoxy有将socks代理转为http代理的功能。 好～话不多说，安装： sudo apt install privoxy 安装完毕后，配置安装文件 因为tor监听的端口是9050，所以我们把127.0.0.1:9050的socks5的流量转换成html、htmls的 sudo vi /etc/privoxy/config 在里面插入一行 forward-socks5t / 127.0.0.1:9050 . listen-address 0.0.0.0:8118 后面的“.”不要忘了。启动一下privoxy服务。 sudo service privoxy restart 这样就可以给终端设置tor匿名了。 vi ~/.zshc 在里面添加一句 alias hp=&quot;http_proxy=127.0.0.1:8118&quot; 这样只要你在需要用到匿名的时候，在命令前加一句hp，就可以实现流量相对匿名了。 测试：hp curl ip.sb 就会显示你当前代理以后的源ip，如果显示ip是国外的，表示你成功了。 最后因为最近失恋了，心情很郁闷，哎，blog写的效率有点低，各位多担待。","categories":[],"tags":[{"name":"网络","slug":"网络","permalink":"http://www.kevinfaith.cn/tags/网络/"},{"name":"梯子","slug":"梯子","permalink":"http://www.kevinfaith.cn/tags/梯子/"}]},{"title":"beef漏洞利用框架安装.md","slug":"beef漏洞利用框架安装","date":"2018-04-07T14:08:20.000Z","updated":"2018-04-20T04:52:45.236Z","comments":true,"path":"/posts/26725/","link":"","permalink":"http://www.kevinfaith.cn/posts/26725/","excerpt":"简介BeEF是目前欧美最流行的web框架攻击平台，它的全称是 the Browser exploitation framework project.最近两年国外各种黑客的会议都有它的介绍，很多pentester对这个工具都有很高的赞美。BeEF是我见过的最好的xss利用框架，他同时能够配合metasploit进一步渗透主机，强大的有些吓人！！","text":"简介BeEF是目前欧美最流行的web框架攻击平台，它的全称是 the Browser exploitation framework project.最近两年国外各种黑客的会议都有它的介绍，很多pentester对这个工具都有很高的赞美。BeEF是我见过的最好的xss利用框架，他同时能够配合metasploit进一步渗透主机，强大的有些吓人！！ 安装：１．先安装一些必要的工具：sudo apt-get install curl git nodejs ２．因为beef是ruby编写的，所以首先安装ruby管理工具：curl -sSL https://get.rvm.io | bash -s stable source /etc/profile.d/rvm.sh rvm install 2.3.0 //安装ruby2.3.0版本 rvm use 2.3.0 --default //选择系统默认版本为2.3.0 ３．安装beff:git clone git://github.com/beefproject/beef.git cd beef 4.安装bundle:gem install bundle bundle install 5.更新beEF:./update-beef 6.启动beEF:./beef 7.启动浏览器：http://127.0.0.1:3000/ui/panel //进入beef后台管理页面 使用默认用户名 beef 密码 beef登录 8.使用：BeEF自带了一个hack页面 http://127.0.0.1:3000/demos/basic.html 当有人点击这个页面，就可以控制他的浏览器，钓鱼，社工，随你发挥。 补充：运行curl -sSL https://get.rvm.io | bash -s stable 时会报公钥问题。根据提示的公钥，再运行gpg –keyserver hkp://keys.gnupg.net –recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3成功运行后，再一次curl -sSL https://get.rvm.io | bash -s stable 来安装环境。","categories":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://www.kevinfaith.cn/categories/渗透测试/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://www.kevinfaith.cn/tags/渗透测试/"},{"name":"XSS","slug":"XSS","permalink":"http://www.kevinfaith.cn/tags/XSS/"}]},{"title":"介绍一款牛逼的渗透测试框架","slug":"介绍一款牛逼的社会工程学字典生成器","date":"2018-03-24T12:39:13.000Z","updated":"2018-04-20T04:52:45.244Z","comments":true,"path":"/posts/3818/","link":"","permalink":"http://www.kevinfaith.cn/posts/3818/","excerpt":"简介工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（https://github.com/alpha1e0/pentestdb.git）","text":"简介工欲善其事必先利其器，一件好的工具能给我们渗透测试提高很多效率，今天就介绍一款我个人觉得非常牛逼的渗透测试框架，———PentestDB（https://github.com/alpha1e0/pentestdb.git） 安装PentestDB支持windows/linux/macos，需安装python 2.6.x 或 2.7.x运行。 git clone https://github.com/alpha1e0/pentestdb.git 安装依赖：项目中的脚本文件依赖于lxml，linux系统一般默认安装lxml，如果没有可通过以下方式安装： pip install lxml apt-get install lxml yum install lxml windows用户：我对windows不怎么了解，具体就自行百度了。 解决nmap依赖项目中的C段扫描依赖于nmap扫描器，到https://nmap.org/download.html下载nmap，在windows下需要设置环境变量，让系统能够找到nmap.exe。还是那句话，在windows下怎么添加环境变量，我就不班门弄斧了，自行百度吧。linux是不需要的。 使用：1.Exploit系统pen.py的exploit子命令提供了exploit模块相关操作，exploit模块是一个轻量级的exploit框架，可以编写各种web漏洞的exploit： 搜索exploit信息 增加、删除、修改exploit信息 执行某个exploit 搜索并批量执行exploitexploit保存在项目根目录下的exploit目录下例如： #列举、搜索、注册、更新、删除 pen.py exploit -l pen.py exploit -q appName:joomla pen.py exploit --register exploit pen.py exploit --update cms_joomla_3_4_session_object_injection.py pen.py exploit -d &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot; pen.py exploit --detail &quot;Joomla 1.5~3.4 session对象注入漏洞exploit&quot; #执行exploit pen.py exploit -e cms_joomla_3_4_session_object_injection.py -u http://127.0.0.1:1234 --attack pen.py exploit -s appName:joomla -u http://127.0.0.1:1234 --verify pen.py exploit -s appName:joomla -u @url.txt 2.服务端应用识别pen.py的service子命令提供了服务端应用识别的功能，能够识别服务器信息，包括： 操作系统 web服务器 web中间件 CMS等 例如： pen.py service http://xxx.com # 开启CMS识别加强模式 pen.py service http://xxx.com --cms 3.社工密码字典生成pen.py的password子命令提供了根据社工信息生成密码字典的功能，能够设置不同关键字生成密码字典 该模块可通过以下要素组合生成密码： 全名，–fullname，名字中各个字中间加空格，例如”lin zhi ling” 昵称，–nickname 英文名称，–englishname 伴侣名字，–partnername 生日，–birthday 手机号，–phone QQ号，–qq 公司名称，–company 域名，–domian 老密码，–oldpasswd 关键字，–keyword 关键数字，–keynumbers 例如： pen.py password --fullname &quot;lin zhi ling&quot; --birthday 1980-1-1 --phone 12344445555 --qq 34233888 -o password.txt 4.URI敏感文件爆破pen.py的uribrute子命令提供了URI敏感文件爆破，URI爆破字典生成的功能 例如： # 生成web打包备份、敏感文件字典，后缀名使用jsp和jspx，自定义关键字xxx，指定输出结果dict.txt pen.py uribrute -t webbak,interestfile -e jspx,jsp --keyword &quot;xxx&quot; -o dict.txt # 爆破目标站点，使用safeurl bypass waf pen.py uribrute -b -u http://127.0.0.1/discuz/6.0/ --safeurl &quot;http://127.0.0.1/discuz/6.0/&quot; # 爆破url.txt中的所有站点，爆破敏感文件，自定义notfound页面关键字为“找不到页面” pen.py uribrute -b -u @urls.txt -t interestfile --notfound &quot;找不到页面&quot; 5.Google Hacking功能pen.py的search子命令提供了Google Hacking的功能，目前支持以下搜索引擎： bing google baidu 例如： pen.py search &quot;inurl:viewthread.php&quot; -s 10 -o tmp.txt # --unique设定域名唯一，相同域名只记录一个搜索结果: pen.py search &quot;inurl:viewthread.php&quot; -s 10 --unique -o tmp.txt 注意，由于百度关闭了 localsearch 功能，因此目前 baidu 方式目前暂不可用。 6.子域名爆破pen.py的domain子命令提供了子域名爆破功能： 域传送漏洞检测、利用 DNS字典爆破 Google Hacking搜索 注：支持输出到html文件，使用-o xxx.html做为输出文件即可例如： # 使用域传送技术、Google Hacking对aaa.com 进行子域名爆破 pen.py domamin aaa.com -t zg # 使用字典爆破子域名，自定义字典文件domain_large.txt，同时指定爆破顶级域名 pen.py domain aaa.com -t d --dict domain_large.txt --topdomian 7.C段扫描pen.py的subnet子命令提供了C段扫描功能。 注：支持输出到html文件，使用-o xxx.html做为输出文件即可 例如： pen.py subnet test.com -o result.html 8.编码pen.py的encode子命令提供了编码的功能 编码方式-t/–type支持： url url-all hex decimal unicode unicode-all md5 sha base64 base32 html html-all php-chr utf7 utf7-all其中**-all编码会编码所有字符包括非特殊字符 非ASCII编码-m/–method支持： utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式 例如： pen.py encode -t unicode &quot;aaa=你好&quot; pen.py encode -t url-all -m gbk &quot;id=你好&quot; pen.py encode -t md5 &quot;aaaaaaaa&quot; 9.解码pen.py的decode子命令提供了解码的功能，并提供非ASCII编码编码推测功能 解码方式-t/–type支持： auto(默认) hex url unicode decimal base64 base32 html php-chr utf7其中auto方式会自动检测url类型、hex类型的字符串并进行解码 非ASCII编码-m/–method支持： utf8 gbk gb2312 big5 utf16 utf7 等所有python支持的编码方式 例如： pen.py decode -t base64 5ZOI5ZOI pen.py decode -m utf8 aaa%E5%93%88%E5%93%88 pen.py encode -t hex &quot;\\x61\\x61\\xe5\\x93\\x88\\xe5\\x93\\x88&quot; # 推测编码 pen.py decode -d &quot;\\x61\\x61\\xe5\\x93\\x88\\xe5\\x93\\x88&quot; 我就列举了一些常用的功能，还有很多非常不错的功能，如“ Mail账户验证/爆破”、“文件处理功能”，“字典维护”等等。我就不一一列举了，感兴趣的可以去项目地址自行查看“https://github.com/alpha1e0/pentestdb.git”。","categories":[],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://www.kevinfaith.cn/tags/渗透测试/"},{"name":"kali","slug":"kali","permalink":"http://www.kevinfaith.cn/tags/kali/"}]},{"title":"linux给终端、git设置代理","slug":"linux给终端、git设置代理","date":"2018-03-15T12:43:20.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/38299/","link":"","permalink":"http://www.kevinfaith.cn/posts/38299/","excerpt":"概述：因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？","text":"概述：因为我大中国的国情～（咳咳，你们懂得），很多时候给我们造成很多不便，一些软件的下载，需要挂代理才能完成，而在linux下，怎么给我们的终端设置代理呢？ 准备工具：Shadowsocks-qt5 polipo 一台搭建有ss服务的海外服务器 安装步骤：安装ss-qt5：$ sudo add-apt-repository ppa:hzwhuang/ss-qt5 $ sudo apt-get update $ sudo apt-get install shadowsocks-qt5 安装完成，打开软件 点击连接-&gt;添加-&gt;手动，输入服务器地址，端口，本地映射地址，本地端口，加密协议,保存，连接，就ojbk了。（怎么搭建Shadowsocks的教程请自行搜索，因为各种原因我就不一一陈诉了）这是我的配置截图： 安装polipo:命令很简单 $ sudo apt-get install polipo 修改配置文件：$ vi etc/polipo/config 原文件中已经有了两句话，那么需要新加入3句话： socksParentProxy = &quot;127.0.0.1:1080&quot; //这里对应着上面配置文件的本地地址和本地端口 socksProxyType = socks5 //这里对应上面的本地服务器类型 logLevel=4 :wq 保存退出 关闭和启动polip:$ sudo service polipo stop $ sudo service polipo start 验证和使用：$ curl ip.gs //查询你的IP地址和地理信息 $ http_proxy=http://localhost:8123 curl ip.gs //使用代理以后的ip地址和地理信息，如果发现ip和地理信息已经改变了，表示成功 以后终端使用代理前面都要加上http_proxy=http://localhost:8123 是不是很麻烦。别着急 设置别名每一次都输入这么一串命令实在太不人性化，解决方法就是给这个命令一个缩写的别名，比如“hp”。 vi ～/.bashrc 因为我用的是zsh,所以我的命令是vi ~/.zshrc在文档最后面加上 alias hp=&quot;http_proxy=http://localhost:8123&quot; :wq 保存退出执行$ source ~/.zshrc这样就不需要输入一长串代码了，需要用到代理的时候前面加个hp就好，实验一下 $ hp curl ip.gs Current IP / 当前 IP: 45.77.253.103 ISP / 运营商: choopa.com City / 城市: Singapore Country / 国家: Singapore 给git设置代理：上面的配置对git是没有用的，需要另行配置在终端下执行： $ git config --global http.proxy http://127.0.0.1:8123 但是这种方法在关机以后就不起效果了，需要重新输入一遍，如果嫌麻烦，可以修改 $ vi ~/.gitconfig 在[http]一行下面加入proxy = http://127.0.0.1:8123就可以一直奇效了","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"},{"name":"代理","slug":"代理","permalink":"http://www.kevinfaith.cn/tags/代理/"},{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"http://www.kevinfaith.cn/tags/Shadowsocks/"}]},{"title":"ubuntu下安装node版本管理工具NVM","slug":"ubuntu下安装node版本管理工具NVM","date":"2018-03-04T06:50:41.000Z","updated":"2018-04-20T04:52:45.244Z","comments":true,"path":"/posts/24809/","link":"","permalink":"http://www.kevinfaith.cn/posts/24809/","excerpt":"概述：nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。","text":"概述：nvm是nodejs的版本管理工具,因为nodejs编译非常麻烦，然后编译上有些又需要不同的版本，nvm就应运而生了，nvm是一个可以让你在同一台机器上安装和切换不同版本nodejs的工具。 安装 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash如果没有curl可以 sudo apt install curl一下等进度条结束就安装好啦～^_^ 使用终端输入nvm你就可以看到nvm的帮助信息了 常用命令 nvm ls-remote //列出全部可以安装的版本号nvm install v7.7.0 //安装指定版本nvm use v7.8.0 //切换nodejs的版本，效果是全局的哦nvm current //查看当前使用的版本nvm ls //查看系统当前使用版本","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"},{"name":"nvm","slug":"nvm","permalink":"http://www.kevinfaith.cn/tags/nvm/"},{"name":"nodejs","slug":"nodejs","permalink":"http://www.kevinfaith.cn/tags/nodejs/"}]},{"title":"acm C语言鸡兔同笼问题","slug":"acm","date":"2017-03-02T16:00:00.000Z","updated":"2018-04-20T04:52:45.236Z","comments":true,"path":"/posts/15133/","link":"","permalink":"http://www.kevinfaith.cn/posts/15133/","excerpt":"描述 浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。","text":"描述 浙江工商大学校园里绿树成荫，环境非常舒适，因此也引来一批动物朋友来此居住。童心未泯的redraiment就经常带些碎面包什么的去广场喂鸽子和兔子，并和它们玩耍。一点也不像大学生，还是一副老不正经的样子，呵呵。随着鸽子和兔子数目的增多，redraiment带的那点食物已经不够它们瓜分了。为了能让自己的好朋友吃的饱饱的，redraiment决定统计一下有多少只鸽子和有多少只兔子，以便带来足够的食物。一、二、三、四、五…他开始数了。现在，他已经知道有这些鸽子和兔子一共有n个头和m只脚。请你帮他写个程序计算一下一共有多少只鸽子和兔子。 输入 输入包括多组数据。每行包括2个数据：n、m(代表上面题目中提到的意思1≤n, m≤230)。n、m都是整数。 输出 每组数据的输出都只有一行，分别是鸽子的数量和兔子数量。如果输入的测试数据不能求得结果，那肯定是redraiment这个马大哈数错了，就输出”Error”提示他。 样例输入 94 3513 样例输出 12 23error 上代码 #include &lt;stdio.h&gt; int main() { int m,n,x,y; scanf(&quot;%d,%d&quot;,&amp;m,&amp;n); if (n&gt;=1,m&lt;=2^30 ) { if ( m % 2 == 0 ) { x=2*n-m/2; y=m/2-n; printf(&quot;%d,%d\\n&quot;,x,y); } else { printf(&quot;error\\n&quot;); } } else { printf(&quot;error\\n&quot;); } return 0; }","categories":[{"name":"acm编程","slug":"acm编程","permalink":"http://www.kevinfaith.cn/categories/acm编程/"}],"tags":[{"name":"acm","slug":"acm","permalink":"http://www.kevinfaith.cn/tags/acm/"}]},{"title":"acm C语言求两个数最大值","slug":"acm2","date":"2017-02-16T16:00:00.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/22498/","link":"","permalink":"http://www.kevinfaith.cn/posts/22498/","excerpt":"C语言实验题――两个数比较","text":"C语言实验题――两个数比较描述 求2个数中较大者。 输入 第一行为测试的数据组数N，接下来的N行分别是两个待比较的整数 输出 输出N行，每一行的值为每组数中较大的整数 样例输入 21 215 10 样例输出 215 #include &lt;stdio.h&gt;int a,b;int main(int argc, char const *argv[]){ scanf(“%d,%d”,&amp;a,&amp;b); if (a&gt;b) { printf(“%d\\n”, a); } else { printf(“%d\\n”, b ); } return 0;}","categories":[{"name":"acm编程","slug":"acm编程","permalink":"http://www.kevinfaith.cn/categories/acm编程/"}],"tags":[{"name":"acm","slug":"acm","permalink":"http://www.kevinfaith.cn/tags/acm/"}]},{"title":"linux下实现计划任务的方法","slug":"linux2","date":"2017-02-15T16:00:00.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/15245/","link":"","permalink":"http://www.kevinfaith.cn/posts/15245/","excerpt":"linux下实行计划任务的方法 执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world： at 10.00 tomorrowat &gt;etho“hello world”","text":"linux下实行计划任务的方法 执行一次性任务可以用at命令，比如你要设置一个明天上午10点输出hello world： at 10.00 tomorrowat &gt;etho“hello world” ctrl+D结束输入 job 1 at 2017-2-16 10:00 这样就ok了 2.如果要设置周期性任务，可以用crontab命令来完成，“crontab -e”编辑cron表，“crontab -l”查看当前cron表，“crontab -r“删除当前cron表，”crontab -u 用户名”以某用户的身份控制cron表。 crontab -e 编辑cron表，这时会打开vi，按“i”进入编辑模式，依此输入 “分钟 小时 日 月 周 [用户名] 命令”如：我想在2017.2.16，4点输出i love you * 4 16 2 * etho“i love you” cron时间符号 * 代表任意时间，代表分隔出不连续点，如2.5.7- 代表连续点。如2-4， 表示2.3.4 */ 表示每隔单位时间","categories":[{"name":"linux命令","slug":"linux命令","permalink":"http://www.kevinfaith.cn/categories/linux命令/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]},{"title":"linux下修改文件所属用户组和文件权限的方法","slug":"linux","date":"2017-02-14T16:00:00.000Z","updated":"2018-04-20T04:52:45.240Z","comments":true,"path":"/posts/51489/","link":"","permalink":"http://www.kevinfaith.cn/posts/51489/","excerpt":"linux下修改文件所属用户组和修改文件权限的方法 修改文件所属用户组的命令是chown，这个命令的格式是 chown [-R] username filenamechown [-R] username:group filename","text":"linux下修改文件所属用户组和修改文件权限的方法 修改文件所属用户组的命令是chown，这个命令的格式是 chown [-R] username filenamechown [-R] username:group filename 第一个是修改文件所属的的用户，第二个修改文件所属用户组,-R属性为可选属性，意思是递归修改，也就是把文件下所有文件，包括子目录一起修改，大多数情况下-R 属性都是这个意思。 2.修改文件权限的命令是chmod，这个命令的格式是有两种设置方法有数字法与文字法i，数字法 就是用数字来代替rwx，r、w、x分别对应4、2、1，这个命令的格式为 chmod [-R] xyz filename 其中x代表owner权限，y代表group权限，z代表others权限，以上三种身份的值就是rwx的和，r代表读，w写 ，x运行，如果没有相应的权限则值为0。如想设置.bashrc文件的权限为owner为rwx，group权限为无，others权限为无，则命令如下 chmod 700 .bashrc","categories":[{"name":"linux命令","slug":"linux命令","permalink":"http://www.kevinfaith.cn/categories/linux命令/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.kevinfaith.cn/tags/linux/"}]}]}